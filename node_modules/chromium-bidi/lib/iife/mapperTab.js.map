{"version":3,"file":"mapperTab.js","sources":["../../node_modules/zod/lib/helpers/util.js","../../node_modules/zod/lib/ZodError.js","../../node_modules/zod/lib/locales/en.js","../../node_modules/zod/lib/errors.js","../../node_modules/zod/lib/helpers/parseUtil.js","../../node_modules/zod/lib/helpers/typeAliases.js","../../node_modules/zod/lib/helpers/errorUtil.js","../../node_modules/zod/lib/types.js","../../node_modules/zod/lib/external.js","../../node_modules/zod/lib/index.js","../cjs/protocol/protocol.js","../cjs/protocol-parser/protocol-parser.js","../cjs/utils/EventEmitter.js","../../node_modules/mitt/dist/mitt.js","../cjs/utils/log.js","../cjs/utils/processingQueue.js","../cjs/utils/unitConversions.js","../cjs/utils/deferred.js","../cjs/bidiMapper/domains/script/scriptEvaluator.js","../cjs/bidiMapper/domains/script/realm.js","../cjs/bidiMapper/domains/context/browsingContextImpl.js","../cjs/bidiMapper/domains/log/logHelper.js","../cjs/bidiMapper/domains/log/logManager.js","../cjs/utils/DefaultMap.js","../cjs/bidiMapper/domains/network/networkRequest.js","../cjs/bidiMapper/domains/network/networkProcessor.js","../cjs/bidiMapper/domains/context/cdpTarget.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v1.js","../../node_modules/uuid/dist/esm-browser/parse.js","../../node_modules/uuid/dist/esm-browser/v35.js","../../node_modules/uuid/dist/esm-browser/md5.js","../../node_modules/uuid/dist/esm-browser/v3.js","../../node_modules/uuid/dist/esm-browser/sha1.js","../../node_modules/uuid/dist/esm-browser/v5.js","../../node_modules/uuid/dist/esm-browser/nil.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/uuid/dist/esm-browser/version.js","../cjs/bidiMapper/domains/context/PreloadScriptStorage.js","../cjs/bidiMapper/domains/context/browsingContextProcessor.js","../cjs/bidiMapper/OutgoingBidiMessage.js","../cjs/bidiMapper/CommandProcessor.js","../cjs/bidiMapper/domains/context/browsingContextStorage.js","../cjs/utils/buffer.js","../cjs/utils/idWrapper.js","../cjs/bidiMapper/domains/events/SubscriptionManager.js","../cjs/bidiMapper/domains/events/EventManager.js","../cjs/bidiMapper/domains/script/realmStorage.js","../cjs/bidiMapper/BidiServer.js","../cjs/cdp/cdpConnection.js","../cjs/cdp/cdpClient.js","../cjs/utils/websocketTransport.js","../cjs/cdp/index.js","../cjs/bidiTab/mapperTabPage.js","../cjs/bidiTab/bidiTab.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\"\n        ? (obj) => Object.keys(obj)\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val)\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util = exports.util || (exports.util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../helpers/util\");\nconst ZodError_1 = require(\"../ZodError\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.default = errorMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\nconst en_1 = __importDefault(require(\"./locales/en\"));\nexports.defaultErrorMap = en_1.default;\nlet overrideErrorMap = en_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexports.setErrorMap = setErrorMap;\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\nexports.getErrorMap = getErrorMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst errors_1 = require(\"../errors\");\nconst en_1 = __importDefault(require(\"../locales/en\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            (0, errors_1.getErrorMap)(),\n            en_1.default,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.discriminatedUnion = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = void 0;\nconst errors_1 = require(\"./errors\");\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n        this.nonempty = (message) => this.min(1, errorUtil_1.errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        this.nonstrict = this.passthrough;\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    static create(discriminator, options, params) {\n        const optionsMap = new Map();\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_1.getParsedType)(a);\n    const bType = (0, util_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x);\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return (0, parseUtil_1.OK)(async (...args) => {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return (0, parseUtil_1.OK)((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_1.isValid)(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!(0, parseUtil_1.isValid)(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return (0, parseUtil_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return (0, parseUtil_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => (0, exports.custom)((data) => data instanceof cls, params);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_1.INVALID;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\n__exportStar(require(\"./helpers/util\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst z = __importStar(require(\"./external\"));\nexports.z = z;\n__exportStar(require(\"./external\"), exports);\nexports.default = z;\n","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CDP = exports.Network = exports.Log = exports.BrowsingContext = exports.Script = exports.Message = void 0;\nvar Message;\n(function (Message) {\n    // keep-sorted end;\n    let ErrorCode;\n    (function (ErrorCode) {\n        // keep-sorted start\n        ErrorCode[\"InvalidArgument\"] = \"invalid argument\";\n        ErrorCode[\"InvalidSessionId\"] = \"invalid session id\";\n        ErrorCode[\"NoSuchAlert\"] = \"no such alert\";\n        ErrorCode[\"NoSuchFrame\"] = \"no such frame\";\n        ErrorCode[\"NoSuchHandle\"] = \"no such handle\";\n        ErrorCode[\"NoSuchNode\"] = \"no such node\";\n        ErrorCode[\"NoSuchScript\"] = \"no such script\";\n        ErrorCode[\"SessionNotCreated\"] = \"session not created\";\n        ErrorCode[\"UnknownCommand\"] = \"unknown command\";\n        ErrorCode[\"UnknownError\"] = \"unknown error\";\n        ErrorCode[\"UnsupportedOperation\"] = \"unsupported operation\";\n        // keep-sorted end\n    })(ErrorCode = Message.ErrorCode || (Message.ErrorCode = {}));\n    class ErrorResponse {\n        error;\n        message;\n        stacktrace;\n        constructor(error, message, stacktrace) {\n            this.error = error;\n            this.message = message;\n            this.stacktrace = stacktrace;\n        }\n        toErrorResponse(commandId) {\n            return {\n                id: commandId,\n                error: this.error,\n                message: this.message,\n                stacktrace: this.stacktrace,\n            };\n        }\n    }\n    Message.ErrorResponse = ErrorResponse;\n    class InvalidArgumentException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.InvalidArgument, message, stacktrace);\n        }\n    }\n    Message.InvalidArgumentException = InvalidArgumentException;\n    class NoSuchHandleException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchHandle, message, stacktrace);\n        }\n    }\n    Message.NoSuchHandleException = NoSuchHandleException;\n    class InvalidSessionIdException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.InvalidSessionId, message, stacktrace);\n        }\n    }\n    Message.InvalidSessionIdException = InvalidSessionIdException;\n    class NoSuchAlertException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchAlert, message, stacktrace);\n        }\n    }\n    Message.NoSuchAlertException = NoSuchAlertException;\n    class NoSuchFrameException extends ErrorResponse {\n        constructor(message) {\n            super(ErrorCode.NoSuchFrame, message);\n        }\n    }\n    Message.NoSuchFrameException = NoSuchFrameException;\n    class NoSuchNodeException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchNode, message, stacktrace);\n        }\n    }\n    Message.NoSuchNodeException = NoSuchNodeException;\n    class NoSuchScriptException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchScript, message, stacktrace);\n        }\n    }\n    Message.NoSuchScriptException = NoSuchScriptException;\n    class SessionNotCreatedException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.SessionNotCreated, message, stacktrace);\n        }\n    }\n    Message.SessionNotCreatedException = SessionNotCreatedException;\n    class UnknownCommandException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.UnknownCommand, message, stacktrace);\n        }\n    }\n    Message.UnknownCommandException = UnknownCommandException;\n    class UnknownErrorException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.UnknownError, message, stacktrace);\n        }\n    }\n    Message.UnknownErrorException = UnknownErrorException;\n    class UnsupportedOperationException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.UnsupportedOperation, message, stacktrace);\n        }\n    }\n    Message.UnsupportedOperationException = UnsupportedOperationException;\n})(Message = exports.Message || (exports.Message = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-script */\nvar Script;\n(function (Script) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"MessageEvent\"] = \"script.message\";\n    })(EventNames = Script.EventNames || (Script.EventNames = {}));\n    Script.AllEvents = 'script';\n})(Script = exports.Script || (exports.Script = {}));\n// https://w3c.github.io/webdriver-bidi/#module-browsingContext\nvar BrowsingContext;\n(function (BrowsingContext) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LoadEvent\"] = \"browsingContext.load\";\n        EventNames[\"DomContentLoadedEvent\"] = \"browsingContext.domContentLoaded\";\n        EventNames[\"ContextCreatedEvent\"] = \"browsingContext.contextCreated\";\n        EventNames[\"ContextDestroyedEvent\"] = \"browsingContext.contextDestroyed\";\n    })(EventNames = BrowsingContext.EventNames || (BrowsingContext.EventNames = {}));\n    BrowsingContext.AllEvents = 'browsingContext';\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-log */\nvar Log;\n(function (Log) {\n    Log.AllEvents = 'log';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LogEntryAddedEvent\"] = \"log.entryAdded\";\n    })(EventNames = Log.EventNames || (Log.EventNames = {}));\n})(Log = exports.Log || (exports.Log = {}));\nvar Network;\n(function (Network) {\n    Network.AllEvents = 'network';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"BeforeRequestSentEvent\"] = \"network.beforeRequestSent\";\n        EventNames[\"ResponseCompletedEvent\"] = \"network.responseCompleted\";\n        EventNames[\"FetchErrorEvent\"] = \"network.fetchError\";\n    })(EventNames = Network.EventNames || (Network.EventNames = {}));\n})(Network = exports.Network || (exports.Network = {}));\nvar CDP;\n(function (CDP) {\n    CDP.AllEvents = 'cdp';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"EventReceivedEvent\"] = \"cdp.eventReceived\";\n    })(EventNames = CDP.EventNames || (CDP.EventNames = {}));\n})(CDP = exports.CDP || (exports.CDP = {}));\n//# sourceMappingURL=protocol.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.CDP = exports.BrowsingContext = exports.Script = exports.CommonDataTypes = exports.parseObject = void 0;\n/**\n * @fileoverview Provides parsing and validator for WebDriver BiDi protocol.\n * Parser types should match the `../protocol` types.\n */\nconst zod_1 = require(\"zod\");\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst MAX_INT = 9007199254740991;\nfunction parseObject(obj, schema) {\n    const parseResult = schema.safeParse(obj);\n    if (parseResult.success) {\n        return parseResult.data;\n    }\n    const errorMessage = parseResult.error.errors\n        .map((e) => `${e.message} in ` +\n        `${e.path.map((p) => JSON.stringify(p)).join('/')}.`)\n        .join(' ');\n    throw new protocol_js_1.Message.InvalidArgumentException(errorMessage);\n}\nexports.parseObject = parseObject;\nvar CommonDataTypes;\n(function (CommonDataTypes) {\n    CommonDataTypes.SharedReferenceSchema = zod_1.z.object({\n        sharedId: zod_1.z.string().min(1),\n        handle: zod_1.z.string().optional(),\n    });\n    CommonDataTypes.RemoteReferenceSchema = zod_1.z.object({\n        handle: zod_1.z.string().min(1),\n    });\n    // UndefinedValue = {\n    //   type: \"undefined\",\n    // }\n    const UndefinedValueSchema = zod_1.z.object({ type: zod_1.z.literal('undefined') });\n    // NullValue = {\n    //   type: \"null\",\n    // }\n    const NullValueSchema = zod_1.z.object({ type: zod_1.z.literal('null') });\n    // StringValue = {\n    //   type: \"string\",\n    //   value: text,\n    // }\n    const StringValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('string'),\n        value: zod_1.z.string(),\n    });\n    // SpecialNumber = \"NaN\" / \"-0\" / \"Infinity\" / \"-Infinity\";\n    const SpecialNumberSchema = zod_1.z.enum(['NaN', '-0', 'Infinity', '-Infinity']);\n    // NumberValue = {\n    //   type: \"number\",\n    //   value: number / SpecialNumber,\n    // }\n    const NumberValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('number'),\n        value: zod_1.z.union([SpecialNumberSchema, zod_1.z.number()]),\n    });\n    // BooleanValue = {\n    //   type: \"boolean\",\n    //   value: bool,\n    // }\n    const BooleanValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('boolean'),\n        value: zod_1.z.boolean(),\n    });\n    // BigIntValue = {\n    //   type: \"bigint\",\n    //   value: text,\n    // }\n    const BigIntValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('bigint'),\n        value: zod_1.z.string(),\n    });\n    const PrimitiveProtocolValueSchema = zod_1.z.union([\n        UndefinedValueSchema,\n        NullValueSchema,\n        StringValueSchema,\n        NumberValueSchema,\n        BooleanValueSchema,\n        BigIntValueSchema,\n    ]);\n    CommonDataTypes.LocalValueSchema = zod_1.z.lazy(() => zod_1.z.union([\n        PrimitiveProtocolValueSchema,\n        ArrayLocalValueSchema,\n        DateLocalValueSchema,\n        MapLocalValueSchema,\n        ObjectLocalValueSchema,\n        RegExpLocalValueSchema,\n        SetLocalValueSchema,\n    ]));\n    // Order is important, as `parse` is processed in the same order.\n    // `SharedReferenceSchema`->`RemoteReferenceSchema`->`LocalValueSchema`.\n    const LocalOrRemoteValueSchema = zod_1.z.union([\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n    ]);\n    // ListLocalValue = [*LocalValue];\n    const ListLocalValueSchema = zod_1.z.array(LocalOrRemoteValueSchema);\n    // ArrayLocalValue = {\n    //   type: \"array\",\n    //   value: ListLocalValue,\n    // }\n    const ArrayLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('array'),\n        value: ListLocalValueSchema,\n    });\n    // DateLocalValue = {\n    //   type: \"date\",\n    //   value: text\n    // }\n    const DateLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('date'),\n        value: zod_1.z.string().min(1),\n    });\n    // MappingLocalValue = [*[(LocalValue / text), LocalValue]];\n    const MappingLocalValueSchema = zod_1.z.tuple([\n        zod_1.z.union([zod_1.z.string(), LocalOrRemoteValueSchema]),\n        LocalOrRemoteValueSchema,\n    ]);\n    // MapLocalValue = {\n    //   type: \"map\",\n    //   value: MappingLocalValue,\n    // }\n    const MapLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('map'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // ObjectLocalValue = {\n    //   type: \"object\",\n    //   value: MappingLocalValue,\n    // }\n    const ObjectLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('object'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // RegExpLocalValue = {\n    //   type: \"regexp\",\n    //   value: RegExpValue,\n    // }\n    const RegExpLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('regexp'),\n        value: zod_1.z.object({\n            pattern: zod_1.z.string(),\n            flags: zod_1.z.string().optional(),\n        }),\n    });\n    // SetLocalValue = {\n    //   type: \"set\",\n    //   value: ListLocalValue,\n    // }\n    const SetLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('set'),\n        value: ListLocalValueSchema,\n    }));\n    // BrowsingContext = text;\n    CommonDataTypes.BrowsingContextSchema = zod_1.z.string();\n    CommonDataTypes.MaxDepthSchema = zod_1.z.number().int().nonnegative().max(MAX_INT);\n})(CommonDataTypes = exports.CommonDataTypes || (exports.CommonDataTypes = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-script */\nvar Script;\n(function (Script) {\n    const RealmTypeSchema = zod_1.z.enum([\n        'window',\n        'dedicated-worker',\n        'shared-worker',\n        'service-worker',\n        'worker',\n        'paint-worklet',\n        'audio-worklet',\n        'worklet',\n    ]);\n    Script.GetRealmsParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema.optional(),\n        type: RealmTypeSchema.optional(),\n    });\n    function parseGetRealmsParams(params) {\n        return parseObject(params, Script.GetRealmsParametersSchema);\n    }\n    Script.parseGetRealmsParams = parseGetRealmsParams;\n    // ContextTarget = {\n    //   context: BrowsingContext,\n    //   ?sandbox: text\n    // }\n    const ContextTargetSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        sandbox: zod_1.z.string().optional(),\n    });\n    // RealmTarget = {realm: Realm};\n    const RealmTargetSchema = zod_1.z.object({\n        realm: zod_1.z.string().min(1),\n    });\n    // Target = (\n    //   RealmTarget //\n    //   ContextTarget\n    // );\n    // Order is important, as `parse` is processed in the same order.\n    // `RealmTargetSchema` has higher priority.\n    const TargetSchema = zod_1.z.union([RealmTargetSchema, ContextTargetSchema]);\n    // ResultOwnership = \"root\" / \"none\"\n    const ResultOwnershipSchema = zod_1.z.enum(['root', 'none']);\n    // SerializationOptions = {\n    //   ?maxDomDepth: (js-uint / null) .default 0,\n    //   ?maxObjectDepth: (js-uint / null) .default null,\n    //   ?includeShadowTree: (\"none\" / \"open\" / \"all\") .default \"none\",\n    // }\n    const SerializationOptionsSchema = zod_1.z.object({\n        maxDomDepth: zod_1.z.union([zod_1.z.null(), zod_1.z.number().int().min(0)]).optional(),\n        maxObjectDepth: zod_1.z\n            .union([zod_1.z.null(), zod_1.z.number().int().min(0).max(MAX_INT)])\n            .optional(),\n        includeShadowTree: zod_1.z.enum(['none', 'open', 'all']).optional(),\n    });\n    // script.EvaluateParameters = {\n    //   expression: text,\n    //   target: script.Target,\n    //   awaitPromise: bool,\n    //   ?resultOwnership: script.ResultOwnership,\n    //   ?serializationOptions: script.SerializationOptions,\n    // }\n    const EvaluateParametersSchema = zod_1.z.object({\n        expression: zod_1.z.string(),\n        awaitPromise: zod_1.z.boolean(),\n        target: TargetSchema,\n        resultOwnership: ResultOwnershipSchema.optional(),\n        serializationOptions: SerializationOptionsSchema.optional(),\n    });\n    function parseEvaluateParams(params) {\n        return parseObject(params, EvaluateParametersSchema);\n    }\n    Script.parseEvaluateParams = parseEvaluateParams;\n    // DisownParameters = {\n    //   handles: [Handle]\n    //   target: script.Target;\n    // }\n    const DisownParametersSchema = zod_1.z.object({\n        target: TargetSchema,\n        handles: zod_1.z.array(zod_1.z.string()),\n    });\n    function parseDisownParams(params) {\n        return parseObject(params, DisownParametersSchema);\n    }\n    Script.parseDisownParams = parseDisownParams;\n    const ChannelSchema = zod_1.z.string();\n    const ChannelPropertiesSchema = zod_1.z.object({\n        channel: ChannelSchema,\n        // TODO(#294): maxDepth: CommonDataTypes.MaxDepthSchema.optional(),\n        // See: https://github.com/w3c/webdriver-bidi/pull/361/files#r1141961142\n        maxDepth: zod_1.z.number().int().min(1).max(1).optional(),\n        ownership: ResultOwnershipSchema.optional(),\n    });\n    Script.ChannelValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('channel'),\n        value: ChannelPropertiesSchema,\n    });\n    Script.PreloadScriptSchema = zod_1.z.string();\n    Script.AddPreloadScriptParametersSchema = zod_1.z.object({\n        functionDeclaration: zod_1.z.string(),\n        arguments: zod_1.z.array(Script.ChannelValueSchema).optional(),\n        sandbox: zod_1.z.string().optional(),\n        context: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseAddPreloadScriptParams(params) {\n        return parseObject(params, Script.AddPreloadScriptParametersSchema);\n    }\n    Script.parseAddPreloadScriptParams = parseAddPreloadScriptParams;\n    Script.RemovePreloadScriptParametersSchema = zod_1.z.object({\n        script: Script.PreloadScriptSchema,\n    });\n    function parseRemovePreloadScriptParams(params) {\n        return parseObject(params, Script.RemovePreloadScriptParametersSchema);\n    }\n    Script.parseRemovePreloadScriptParams = parseRemovePreloadScriptParams;\n    // ArgumentValue = (\n    //   RemoteReference //\n    //   LocalValue //\n    //   script.Channel\n    // );\n    const ArgumentValueSchema = zod_1.z.union([\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n        Script.ChannelValueSchema,\n    ]);\n    // CallFunctionParameters = {\n    //   functionDeclaration: text,\n    //   awaitPromise: bool,\n    //   target: script.Target,\n    //   ?arguments: [*script.ArgumentValue],\n    //   ?resultOwnership: script.ResultOwnership,\n    //   ?serializationOptions: script.SerializationOptions,\n    //   ?this: script.ArgumentValue,\n    // }\n    const CallFunctionParametersSchema = zod_1.z.object({\n        functionDeclaration: zod_1.z.string(),\n        awaitPromise: zod_1.z.boolean(),\n        target: TargetSchema,\n        arguments: zod_1.z.array(ArgumentValueSchema).optional(),\n        resultOwnership: ResultOwnershipSchema.optional(),\n        serializationOptions: SerializationOptionsSchema.optional(),\n        this: ArgumentValueSchema.optional(),\n    });\n    function parseCallFunctionParams(params) {\n        return parseObject(params, CallFunctionParametersSchema);\n    }\n    Script.parseCallFunctionParams = parseCallFunctionParams;\n})(Script = exports.Script || (exports.Script = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-browsingContext */\nvar BrowsingContext;\n(function (BrowsingContext) {\n    // GetTreeParameters = {\n    //   ?maxDepth: js-uint,\n    //   ?root: browsingContext.BrowsingContext,\n    // }\n    const GetTreeParametersSchema = zod_1.z.object({\n        maxDepth: CommonDataTypes.MaxDepthSchema.optional(),\n        root: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseGetTreeParams(params) {\n        return parseObject(params, GetTreeParametersSchema);\n    }\n    BrowsingContext.parseGetTreeParams = parseGetTreeParams;\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const ReadinessStateSchema = zod_1.z.enum(['none', 'interactive', 'complete']);\n    // BrowsingContextNavigateParameters = {\n    //   context: BrowsingContext,\n    //   url: text,\n    //   ?wait: ReadinessState,\n    // }\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const NavigateParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        url: zod_1.z.string().url(),\n        wait: ReadinessStateSchema.optional(),\n    });\n    function parseNavigateParams(params) {\n        return parseObject(params, NavigateParametersSchema);\n    }\n    BrowsingContext.parseNavigateParams = parseNavigateParams;\n    const ReloadParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        ignoreCache: zod_1.z.boolean().optional(),\n        wait: ReadinessStateSchema.optional(),\n    });\n    function parseReloadParams(params) {\n        return parseObject(params, ReloadParametersSchema);\n    }\n    BrowsingContext.parseReloadParams = parseReloadParams;\n    // BrowsingContextCreateType = \"tab\" / \"window\"\n    // BrowsingContextCreateParameters = {\n    //   type: BrowsingContextCreateType\n    // }\n    const CreateParametersSchema = zod_1.z.object({\n        type: zod_1.z.enum(['tab', 'window']),\n        referenceContext: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseCreateParams(params) {\n        return parseObject(params, CreateParametersSchema);\n    }\n    BrowsingContext.parseCreateParams = parseCreateParams;\n    // BrowsingContextCloseParameters = {\n    //   context: BrowsingContext\n    // }\n    const CloseParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCloseParams(params) {\n        return parseObject(params, CloseParametersSchema);\n    }\n    BrowsingContext.parseCloseParams = parseCloseParams;\n    // browsingContext.CaptureScreenshotParameters = {\n    //   context: browsingContext.BrowsingContext\n    // }\n    const CaptureScreenshotParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCaptureScreenshotParams(params) {\n        return parseObject(params, CaptureScreenshotParametersSchema);\n    }\n    BrowsingContext.parseCaptureScreenshotParams = parseCaptureScreenshotParams;\n    // All units are in cm.\n    // PrintPageParameters = {\n    //   ?height: (float .ge 0.0) .default 27.94,\n    //   ?width: (float .ge 0.0) .default 21.59,\n    // }\n    const PrintPageParametersSchema = zod_1.z.object({\n        height: zod_1.z.number().min(0.0).default(27.94).optional(),\n        width: zod_1.z.number().min(0.0).default(21.59).optional(),\n    });\n    // All units are in cm.\n    // PrintMarginParameters = {\n    //   ?bottom: (float .ge 0.0) .default 1.0,\n    //   ?left: (float .ge 0.0) .default 1.0,\n    //   ?right: (float .ge 0.0) .default 1.0,\n    //   ?top: (float .ge 0.0) .default 1.0,\n    // }\n    const PrintMarginParametersSchema = zod_1.z.object({\n        bottom: zod_1.z.number().min(0.0).default(1.0).optional(),\n        left: zod_1.z.number().min(0.0).default(1.0).optional(),\n        right: zod_1.z.number().min(0.0).default(1.0).optional(),\n        top: zod_1.z.number().min(0.0).default(1.0).optional(),\n    });\n    /** @see https://w3c.github.io/webdriver/#dfn-parse-a-page-range */\n    const PrintPageRangesSchema = zod_1.z\n        .array(zod_1.z.union([zod_1.z.string().min(1), zod_1.z.number().int().nonnegative()]))\n        .refine((pageRanges) => {\n        return pageRanges.every((pageRange) => {\n            const match = String(pageRange).match(\n            // matches: '2' | '2-' | '-2' | '2-4'\n            /^(?:(?:\\d+)|(?:\\d+[-])|(?:[-]\\d+)|(?:(?<start>\\d+)[-](?<end>\\d+)))$/);\n            // If a page range is specified, validate start <= end.\n            const { start, end } = match?.groups ?? {};\n            if (start && end && Number(start) > Number(end)) {\n                return false;\n            }\n            return match;\n        });\n    });\n    // PrintParameters = {\n    //   context: browsingContext.BrowsingContext,\n    //   ?background: bool .default false,\n    //   ?margin: browsingContext.PrintMarginParameters,\n    //   ?orientation: (\"portrait\" / \"landscape\") .default \"portrait\",\n    //   ?page: browsingContext.PrintPageParameters,\n    //   ?pageRanges: [*(js-uint / text)],\n    //   ?scale: 0.1..2.0 .default 1.0,\n    //   ?shrinkToFit: bool .default true,\n    // }\n    const PrintParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        background: zod_1.z.boolean().default(false).optional(),\n        margin: PrintMarginParametersSchema.optional(),\n        orientation: zod_1.z\n            .enum(['portrait', 'landscape'])\n            .default('portrait')\n            .optional(),\n        page: PrintPageParametersSchema.optional(),\n        pageRanges: PrintPageRangesSchema.default([]).optional(),\n        scale: zod_1.z.number().min(0.1).max(2.0).default(1.0).optional(),\n        shrinkToFit: zod_1.z.boolean().default(true).optional(),\n    });\n    function parsePrintParams(params) {\n        return parseObject(params, PrintParametersSchema);\n    }\n    BrowsingContext.parsePrintParams = parsePrintParams;\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\nvar CDP;\n(function (CDP) {\n    const SendCommandParamsSchema = zod_1.z.object({\n        // Allowing any cdpMethod, and casting to proper type later on.\n        cdpMethod: zod_1.z.string(),\n        // `passthrough` allows object to have any fields.\n        // https://github.com/colinhacks/zod#passthrough\n        cdpParams: zod_1.z.object({}).passthrough(),\n        cdpSession: zod_1.z.string().optional(),\n    });\n    function parseSendCommandParams(params) {\n        return parseObject(params, SendCommandParamsSchema);\n    }\n    CDP.parseSendCommandParams = parseSendCommandParams;\n    const GetSessionParamsSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseGetSessionParams(params) {\n        return parseObject(params, GetSessionParamsSchema);\n    }\n    CDP.parseGetSessionParams = parseGetSessionParams;\n})(CDP = exports.CDP || (exports.CDP = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-session */\nvar Session;\n(function (Session) {\n    const SubscriptionRequestParametersEventsSchema = zod_1.z.enum([\n        protocol_js_1.BrowsingContext.AllEvents,\n        ...Object.values(protocol_js_1.BrowsingContext.EventNames),\n        protocol_js_1.Log.AllEvents,\n        ...Object.values(protocol_js_1.Log.EventNames),\n        protocol_js_1.CDP.AllEvents,\n        ...Object.values(protocol_js_1.CDP.EventNames),\n        protocol_js_1.Network.AllEvents,\n        ...Object.values(protocol_js_1.Network.EventNames),\n        protocol_js_1.Script.AllEvents,\n        ...Object.values(protocol_js_1.Script.EventNames),\n    ]);\n    // SessionSubscriptionRequest = {\n    //   events: [*text],\n    //   ?contexts: [*BrowsingContext],\n    // }\n    const SubscriptionRequestParametersSchema = zod_1.z.object({\n        events: zod_1.z.array(SubscriptionRequestParametersEventsSchema),\n        contexts: zod_1.z.array(CommonDataTypes.BrowsingContextSchema).optional(),\n    });\n    function parseSubscribeParams(params) {\n        return parseObject(params, SubscriptionRequestParametersSchema);\n    }\n    Session.parseSubscribeParams = parseSubscribeParams;\n})(Session = exports.Session || (exports.Session = {}));\n//# sourceMappingURL=protocol-parser.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mitt_1 = __importDefault(require(\"mitt\"));\nclass EventEmitter {\n    #emitter = (0, mitt_1.default)();\n    on(type, handler) {\n        this.#emitter.on(type, handler);\n        return this;\n    }\n    /**\n     * Like `on` but the listener will only be fired once and then it will be removed.\n     * @param event The event you'd like to listen to\n     * @param handler The handler function to run when the event occurs\n     * @return `this` to enable chaining method calls.\n     */\n    once(event, handler) {\n        const onceHandler = (eventData) => {\n            handler(eventData);\n            this.off(event, onceHandler);\n        };\n        return this.on(event, onceHandler);\n    }\n    off(type, handler) {\n        this.#emitter.off(type, handler);\n        return this;\n    }\n    /**\n     * Emits an event and call any associated listeners.\n     *\n     * @param event The event to emit.\n     * @param eventData Any data to emit with the event.\n     * @return `true` if there are any listeners, `false` otherwise.\n     */\n    emit(event, eventData) {\n        this.#emitter.emit(event, eventData);\n    }\n}\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=EventEmitter.js.map","module.exports=function(n){return{all:n=n||new Map,on:function(e,t){var i=n.get(e);i?i.push(t):n.set(e,[t])},off:function(e,t){var i=n.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):n.set(e,[]))},emit:function(e,t){var i=n.get(e);i&&i.slice().map(function(n){n(t)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(e,t)})}}};\n//# sourceMappingURL=mitt.js.map\n","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogType = void 0;\nvar LogType;\n(function (LogType) {\n    // keep-sorted start\n    LogType[\"bidi\"] = \"BiDi Messages\";\n    LogType[\"browsingContexts\"] = \"Browsing Contexts\";\n    LogType[\"cdp\"] = \"CDP\";\n    LogType[\"system\"] = \"System\";\n    // keep-sorted end\n})(LogType = exports.LogType || (exports.LogType = {}));\n//# sourceMappingURL=log.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcessingQueue = void 0;\nconst log_js_1 = require(\"./log.js\");\nclass ProcessingQueue {\n    #logger;\n    #processor;\n    #queue = [];\n    // Flag to keep only 1 active processor.\n    #isProcessing = false;\n    constructor(processor, logger) {\n        this.#processor = processor;\n        this.#logger = logger;\n    }\n    add(entry) {\n        this.#queue.push(entry);\n        // No need in waiting. Just initialise processor if needed.\n        void this.#processIfNeeded();\n    }\n    async #processIfNeeded() {\n        if (this.#isProcessing) {\n            return;\n        }\n        this.#isProcessing = true;\n        while (this.#queue.length > 0) {\n            const entryPromise = this.#queue.shift();\n            if (entryPromise !== undefined) {\n                await entryPromise\n                    .then((entry) => this.#processor(entry))\n                    .catch((e) => {\n                    this.#logger?.(log_js_1.LogType.system, 'Event was not processed:', e);\n                });\n            }\n        }\n        this.#isProcessing = false;\n    }\n}\nexports.ProcessingQueue = ProcessingQueue;\n//# sourceMappingURL=processingQueue.js.map","\"use strict\";\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inchesFromCm = void 0;\n/** @return Given an input in cm, convert it to inches. */\nfunction inchesFromCm(cm) {\n    return cm / 2.54;\n}\nexports.inchesFromCm = inchesFromCm;\n//# sourceMappingURL=unitConversions.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\nclass Deferred {\n    #isFinished = false;\n    #promise;\n    #resolve;\n    #reject;\n    get isFinished() {\n        return this.#isFinished;\n    }\n    constructor() {\n        this.#promise = new Promise((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n        });\n        // Needed to avoid `Uncaught (in promise)`. The promises returned by `then`\n        // and `catch` will be rejected anyway.\n        this.#promise.catch((_error) => {\n            // Intentionally empty.\n        });\n    }\n    then(onFulfilled, onRejected) {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n    catch(onRejected) {\n        return this.#promise.catch(onRejected);\n    }\n    resolve(value) {\n        this.#isFinished = true;\n        this.#resolve?.(value);\n    }\n    reject(reason) {\n        this.#isFinished = true;\n        this.#reject?.(reason);\n    }\n    finally(onFinally) {\n        return this.#promise.finally(onFinally);\n    }\n    [Symbol.toStringTag] = 'Promise';\n}\nexports.Deferred = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScriptEvaluator = exports.SHARED_ID_DIVIDER = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n// As `script.evaluate` wraps call into serialization script, `lineNumber`\n// should be adjusted.\nconst CALL_FUNCTION_STACKTRACE_LINE_OFFSET = 1;\nconst EVALUATE_STACKTRACE_LINE_OFFSET = 0;\nexports.SHARED_ID_DIVIDER = '_element_';\nclass ScriptEvaluator {\n    #eventManager;\n    constructor(eventManager) {\n        this.#eventManager = eventManager;\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @param realm\n     * @return string The stringified object.\n     */\n    static async stringifyObject(cdpObject, realm) {\n        const stringifyResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => {\n                return String(obj);\n            }),\n            awaitPromise: false,\n            arguments: [cdpObject],\n            returnByValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return stringifyResult.result.value;\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpRemoteObject CDP remote object to be serialized.\n     * @param resultOwnership Indicates desired ResultOwnership.\n     * @param realm\n     */\n    async serializeCdpObject(cdpRemoteObject, resultOwnership, realm) {\n        const arg = ScriptEvaluator.#cdpRemoteObjectToCallArgument(cdpRemoteObject);\n        const cdpWebDriverValue = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => obj),\n            awaitPromise: false,\n            arguments: [arg],\n            serializationOptions: {\n                serialization: 'deep',\n            },\n            executionContextId: realm.executionContextId,\n        });\n        return realm.cdpToBidiValue(cdpWebDriverValue, resultOwnership);\n    }\n    async scriptEvaluate(realm, expression, awaitPromise, resultOwnership, serializationOptions) {\n        if (![0, null, undefined].includes(serializationOptions.maxDomDepth))\n            throw new Error('serializationOptions.maxDomDepth other than 0 or null is not supported');\n        const cdpEvaluateResult = await realm.cdpClient.sendCommand('Runtime.evaluate', {\n            contextId: realm.executionContextId,\n            expression,\n            awaitPromise,\n            serializationOptions: {\n                serialization: 'deep',\n                ...(serializationOptions.maxObjectDepth === undefined ||\n                    serializationOptions.maxObjectDepth === null\n                    ? {}\n                    : { maxDepth: serializationOptions.maxObjectDepth }),\n            },\n        });\n        if (cdpEvaluateResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpEvaluateResult.exceptionDetails, EVALUATE_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: realm.cdpToBidiValue(cdpEvaluateResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    async callFunction(realm, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership, serializationOptions) {\n        if (![0, null, undefined].includes(serializationOptions.maxDomDepth))\n            throw new Error('serializationOptions.maxDomDepth other than 0 or null is not supported');\n        const callFunctionAndSerializeScript = `(...args)=>{ return _callFunction((\\n${functionDeclaration}\\n), args);\n      function _callFunction(f, args) {\n        const deserializedThis = args.shift();\n        const deserializedArgs = args;\n        return f.apply(deserializedThis, deserializedArgs);\n      }}`;\n        const thisAndArgumentsList = [\n            await this.#deserializeToCdpArg(_this, realm),\n        ];\n        thisAndArgumentsList.push(...(await Promise.all(_arguments.map(async (a) => {\n            return this.#deserializeToCdpArg(a, realm);\n        }))));\n        let cdpCallFunctionResult;\n        try {\n            cdpCallFunctionResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: callFunctionAndSerializeScript,\n                awaitPromise,\n                arguments: thisAndArgumentsList,\n                serializationOptions: {\n                    serialization: 'deep',\n                    ...(serializationOptions.maxObjectDepth === undefined ||\n                        serializationOptions.maxObjectDepth === null\n                        ? {}\n                        : { maxDepth: serializationOptions.maxObjectDepth }),\n                },\n                executionContextId: realm.executionContextId,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the argument.\n            // The check can be done on the `deserialization` step, but this approach\n            // helps to save round-trips.\n            if (e.code === -32000 &&\n                [\n                    'Could not find object with given id',\n                    'Argument should belong to the same JavaScript world as target object',\n                    'Invalid remote object id',\n                ].includes(e.message)) {\n                throw new protocol_js_1.Message.NoSuchHandleException('Handle was not found.');\n            }\n            throw e;\n        }\n        if (cdpCallFunctionResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpCallFunctionResult.exceptionDetails, CALL_FUNCTION_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: realm.cdpToBidiValue(cdpCallFunctionResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    static #cdpRemoteObjectToCallArgument(cdpRemoteObject) {\n        if (cdpRemoteObject.objectId !== undefined) {\n            return { objectId: cdpRemoteObject.objectId };\n        }\n        if (cdpRemoteObject.unserializableValue !== undefined) {\n            return { unserializableValue: cdpRemoteObject.unserializableValue };\n        }\n        return { value: cdpRemoteObject.value };\n    }\n    async #deserializeToCdpArg(argumentValue, realm) {\n        if ('sharedId' in argumentValue) {\n            const [navigableId, rawBackendNodeId] = argumentValue.sharedId.split(exports.SHARED_ID_DIVIDER);\n            const backendNodeId = parseInt(rawBackendNodeId ?? '');\n            if (isNaN(backendNodeId) ||\n                backendNodeId === undefined ||\n                navigableId === undefined) {\n                throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" was not found.`);\n            }\n            if (realm.navigableId !== navigableId) {\n                throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" belongs to different document. Current document is ${realm.navigableId}.`);\n            }\n            try {\n                const obj = await realm.cdpClient.sendCommand('DOM.resolveNode', {\n                    backendNodeId,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `obj.object.objectId` after using.\n                return { objectId: obj.object.objectId };\n            }\n            catch (e) {\n                // Heuristic to detect \"no such node\" exception. Based on the  specific\n                // CDP implementation.\n                if (e.code === -32000 && e.message === 'No node with given id found') {\n                    throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" was not found.`);\n                }\n                throw e;\n            }\n        }\n        if ('handle' in argumentValue) {\n            return { objectId: argumentValue.handle };\n        }\n        switch (argumentValue.type) {\n            // Primitive Protocol Value\n            // https://w3c.github.io/webdriver-bidi/#data-types-protocolValue-primitiveProtocolValue\n            case 'undefined':\n                return { unserializableValue: 'undefined' };\n            case 'null':\n                return { unserializableValue: 'null' };\n            case 'string':\n                return { value: argumentValue.value };\n            case 'number':\n                if (argumentValue.value === 'NaN') {\n                    return { unserializableValue: 'NaN' };\n                }\n                else if (argumentValue.value === '-0') {\n                    return { unserializableValue: '-0' };\n                }\n                else if (argumentValue.value === 'Infinity') {\n                    return { unserializableValue: 'Infinity' };\n                }\n                else if (argumentValue.value === '-Infinity') {\n                    return { unserializableValue: '-Infinity' };\n                }\n                return {\n                    value: argumentValue.value,\n                };\n            case 'boolean':\n                return { value: Boolean(argumentValue.value) };\n            case 'bigint':\n                return {\n                    unserializableValue: `BigInt(${JSON.stringify(argumentValue.value)})`,\n                };\n            case 'date':\n                return {\n                    unserializableValue: `new Date(Date.parse(${JSON.stringify(argumentValue.value)}))`,\n                };\n            case 'regexp':\n                return {\n                    unserializableValue: `new RegExp(${JSON.stringify(argumentValue.value.pattern)}, ${JSON.stringify(argumentValue.value.flags)})`,\n                };\n            case 'map': {\n                // TODO: If none of the nested keys and values has a remote\n                // reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        const result = new Map();\n                        for (let i = 0; i < args.length; i += 2) {\n                            result.set(args[i], args[i + 1]);\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'object': {\n                // TODO: If none of the nested keys and values has a remote\n                //  reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        const result = {};\n                        for (let i = 0; i < args.length; i += 2) {\n                            // Key should be either `string`, `number`, or `symbol`.\n                            const key = args[i];\n                            result[key] = args[i + 1];\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'array': {\n                // TODO: If none of the nested items has a remote reference,\n                // serialize to `unserializableValue` without CDP roundtrip.\n                const args = await this.#flattenValueList(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        return args;\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'set': {\n                // TODO: if none of the nested items has a remote reference,\n                // serialize to `unserializableValue` without CDP roundtrip.\n                const args = await this.#flattenValueList(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        return new Set(args);\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'channel': {\n                const createChannelHandleResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String(() => {\n                        const queue = [];\n                        let queueNonEmptyResolver = null;\n                        return {\n                            /**\n                             * Gets a promise, which is resolved as soon as a message occurs\n                             * in the queue.\n                             */\n                            async getMessage() {\n                                const onMessage = queue.length > 0\n                                    ? Promise.resolve()\n                                    : new Promise((resolve) => {\n                                        queueNonEmptyResolver = resolve;\n                                    });\n                                await onMessage;\n                                return queue.shift();\n                            },\n                            /**\n                             * Adds a message to the queue.\n                             * Resolves the pending promise if needed.\n                             */\n                            sendMessage(message) {\n                                queue.push(message);\n                                if (queueNonEmptyResolver !== null) {\n                                    queueNonEmptyResolver();\n                                    queueNonEmptyResolver = null;\n                                }\n                            },\n                        };\n                    }),\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                    serializationOptions: {\n                        serialization: 'deep',\n                    },\n                });\n                const channelHandle = createChannelHandleResult.result.objectId;\n                // Long-poll the message queue asynchronously.\n                void this.#initChannelListener(argumentValue, channelHandle, realm);\n                const sendMessageArgResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((channelHandle) => {\n                        return channelHandle.sendMessage;\n                    }),\n                    arguments: [\n                        {\n                            objectId: channelHandle,\n                        },\n                    ],\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                    serializationOptions: {\n                        serialization: 'deep',\n                    },\n                });\n                return { objectId: sendMessageArgResult.result.objectId };\n            }\n            // TODO(#375): Dispose of nested objects.\n            default:\n                throw new Error(`Value ${JSON.stringify(argumentValue)} is not deserializable.`);\n        }\n    }\n    async #flattenKeyValuePairs(mapping, realm) {\n        const keyValueArray = [];\n        for (const [key, value] of mapping) {\n            let keyArg;\n            if (typeof key === 'string') {\n                // Key is a string.\n                keyArg = { value: key };\n            }\n            else {\n                // Key is a serialized value.\n                keyArg = await this.#deserializeToCdpArg(key, realm);\n            }\n            const valueArg = await this.#deserializeToCdpArg(value, realm);\n            keyValueArray.push(keyArg);\n            keyValueArray.push(valueArg);\n        }\n        return keyValueArray;\n    }\n    async #flattenValueList(list, realm) {\n        return Promise.all(list.map((value) => this.#deserializeToCdpArg(value, realm)));\n    }\n    async #initChannelListener(channel, channelHandle, realm) {\n        const channelId = channel.value.channel;\n        // TODO(#294): Remove this loop after the realm is destroyed.\n        // Rely on the CDP throwing exception in such a case.\n        for (;;) {\n            const message = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: String(async (channelHandle) => channelHandle.getMessage()),\n                arguments: [\n                    {\n                        objectId: channelHandle,\n                    },\n                ],\n                awaitPromise: true,\n                executionContextId: realm.executionContextId,\n                serializationOptions: {\n                    serialization: 'deep',\n                },\n            });\n            this.#eventManager.registerEvent({\n                method: protocol_js_1.Script.EventNames.MessageEvent,\n                params: {\n                    channel: channelId,\n                    data: realm.cdpToBidiValue(message, channel.value.ownership ?? 'none'),\n                    source: {\n                        realm: realm.realmId,\n                        context: realm.browsingContextId,\n                    },\n                },\n            }, realm.browsingContextId);\n        }\n    }\n    async #serializeCdpExceptionDetails(cdpExceptionDetails, lineOffset, resultOwnership, realm) {\n        const callFrames = cdpExceptionDetails.stackTrace?.callFrames.map((frame) => ({\n            url: frame.url,\n            functionName: frame.functionName,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: frame.lineNumber - lineOffset,\n            columnNumber: frame.columnNumber,\n        }));\n        const exception = await this.serializeCdpObject(\n        // Exception should always be there.\n        cdpExceptionDetails.exception, resultOwnership, realm);\n        const text = await ScriptEvaluator.stringifyObject(cdpExceptionDetails.exception, realm);\n        return {\n            exception,\n            columnNumber: cdpExceptionDetails.columnNumber,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: cdpExceptionDetails.lineNumber - lineOffset,\n            stackTrace: {\n                callFrames: callFrames || [],\n            },\n            text: text || cdpExceptionDetails.text,\n        };\n    }\n}\nexports.ScriptEvaluator = ScriptEvaluator;\n//# sourceMappingURL=scriptEvaluator.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Realm = void 0;\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst scriptEvaluator_js_1 = require(\"./scriptEvaluator.js\");\nclass Realm {\n    #realmStorage;\n    #browsingContextStorage;\n    #realmId;\n    #browsingContextId;\n    #executionContextId;\n    #origin;\n    #type;\n    #cdpClient;\n    #eventManager;\n    #scriptEvaluator;\n    sandbox;\n    cdpSessionId;\n    #logger;\n    constructor(realmStorage, browsingContextStorage, realmId, browsingContextId, executionContextId, origin, type, sandbox, cdpSessionId, cdpClient, eventManager, logger) {\n        this.#realmId = realmId;\n        this.#browsingContextId = browsingContextId;\n        this.#executionContextId = executionContextId;\n        this.sandbox = sandbox;\n        this.#origin = origin;\n        this.#type = type;\n        this.cdpSessionId = cdpSessionId;\n        this.#cdpClient = cdpClient;\n        this.#realmStorage = realmStorage;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#eventManager = eventManager;\n        this.#scriptEvaluator = new scriptEvaluator_js_1.ScriptEvaluator(this.#eventManager);\n        this.#realmStorage.realmMap.set(this.#realmId, this);\n        this.#logger = logger;\n    }\n    async #releaseObject(handle) {\n        try {\n            await this.cdpClient.sendCommand('Runtime.releaseObject', {\n                objectId: handle,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the unknown handler.\n            // Ignore the error if so.\n            if (!(e.code === -32000 && e.message === 'Invalid remote object id')) {\n                throw e;\n            }\n        }\n    }\n    async disown(handle) {\n        // Disowning an object from different realm does nothing.\n        if (this.#realmStorage.knownHandlesToRealm.get(handle) !== this.realmId) {\n            return;\n        }\n        await this.#releaseObject(handle);\n        this.#realmStorage.knownHandlesToRealm.delete(handle);\n    }\n    cdpToBidiValue(cdpValue, resultOwnership) {\n        const deepSerializedValue = cdpValue.result.deepSerializedValue;\n        const bidiValue = this.deepSerializedToBiDi(deepSerializedValue);\n        if (cdpValue.result.objectId) {\n            const objectId = cdpValue.result.objectId;\n            if (resultOwnership === 'root') {\n                // Extend BiDi value with `handle` based on required `resultOwnership`\n                // and  CDP response but not on the actual BiDi type.\n                bidiValue.handle = objectId;\n                // Remember all the handles sent to client.\n                this.#realmStorage.knownHandlesToRealm.set(objectId, this.realmId);\n            }\n            else {\n                // No need in awaiting for the object to be released.\n                void this.#releaseObject(objectId).catch((error) => this.#logger?.(log_js_1.LogType.system, error));\n            }\n        }\n        return bidiValue;\n    }\n    deepSerializedToBiDi(webDriverValue) {\n        // This relies on the CDP to implement proper BiDi serialization, except\n        // backendNodeId/sharedId and `platformobject`.\n        const result = webDriverValue;\n        if (Object.hasOwn(result, 'weakLocalObjectReference')) {\n            result.internalId = `${result.weakLocalObjectReference}`;\n            delete result['weakLocalObjectReference'];\n        }\n        // Platform object is a special case. It should have only `{type: object}`\n        // without `value` field.\n        if (result.type === 'platformobject') {\n            return { type: 'object' };\n        }\n        const bidiValue = result.value;\n        if (bidiValue === undefined) {\n            return result;\n        }\n        if (result.type === 'node') {\n            if (Object.hasOwn(bidiValue, 'backendNodeId')) {\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                result.sharedId = `${this.navigableId}${scriptEvaluator_js_1.SHARED_ID_DIVIDER}${bidiValue.backendNodeId}`;\n                delete bidiValue['backendNodeId'];\n            }\n            if (Object.hasOwn(bidiValue, 'children')) {\n                for (const i in bidiValue.children) {\n                    bidiValue.children[i] = this.deepSerializedToBiDi(bidiValue.children[i]);\n                }\n            }\n        }\n        // Recursively update the nested values.\n        if (['array', 'set'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = this.deepSerializedToBiDi(bidiValue[i]);\n            }\n        }\n        if (['object', 'map'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = [\n                    this.deepSerializedToBiDi(bidiValue[i][0]),\n                    this.deepSerializedToBiDi(bidiValue[i][1]),\n                ];\n            }\n        }\n        return result;\n    }\n    toBiDi() {\n        return {\n            realm: this.realmId,\n            origin: this.origin,\n            type: this.type,\n            context: this.browsingContextId,\n            ...(this.sandbox === undefined ? {} : { sandbox: this.sandbox }),\n        };\n    }\n    get realmId() {\n        return this.#realmId;\n    }\n    get navigableId() {\n        return (this.#browsingContextStorage.findContext(this.#browsingContextId)\n            ?.navigableId ?? 'UNKNOWN');\n    }\n    get browsingContextId() {\n        return this.#browsingContextId;\n    }\n    get executionContextId() {\n        return this.#executionContextId;\n    }\n    get origin() {\n        return this.#origin;\n    }\n    get type() {\n        return this.#type;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    async callFunction(functionDeclaration, _this, _arguments, awaitPromise, resultOwnership, serializationOptions) {\n        const context = this.#browsingContextStorage.getContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await this.#scriptEvaluator.callFunction(this, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership, serializationOptions),\n        };\n    }\n    async scriptEvaluate(expression, awaitPromise, resultOwnership, serializationOptions) {\n        const context = this.#browsingContextStorage.getContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await this.#scriptEvaluator.scriptEvaluate(this, expression, awaitPromise, resultOwnership, serializationOptions),\n        };\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpObject CDP remote object to be serialized.\n     * @param resultOwnership Indicates desired ResultOwnership.\n     */\n    async serializeCdpObject(cdpObject, resultOwnership) {\n        return this.#scriptEvaluator.serializeCdpObject(cdpObject, resultOwnership, this);\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @return string The stringified object.\n     */\n    async stringifyObject(cdpObject) {\n        return scriptEvaluator_js_1.ScriptEvaluator.stringifyObject(cdpObject, this);\n    }\n}\nexports.Realm = Realm;\n//# sourceMappingURL=realm.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextImpl = void 0;\nconst unitConversions_js_1 = require(\"../../../utils/unitConversions.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst realm_js_1 = require(\"../script/realm.js\");\nclass BrowsingContextImpl {\n    /** The ID of this browsing context. */\n    #id;\n    /**\n     * The ID of the parent browsing context.\n     * If null, this is a top-level context.\n     */\n    #parentId;\n    /** Direct children browsing contexts. */\n    #children = new Set();\n    #browsingContextStorage;\n    #deferreds = {\n        documentInitialized: new deferred_js_1.Deferred(),\n        Page: {\n            navigatedWithinDocument: new deferred_js_1.Deferred(),\n            lifecycleEvent: {\n                DOMContentLoaded: new deferred_js_1.Deferred(),\n                load: new deferred_js_1.Deferred(),\n            },\n        },\n    };\n    #url = 'about:blank';\n    #eventManager;\n    #realmStorage;\n    #loaderId;\n    #cdpTarget;\n    #maybeDefaultRealm;\n    #logger;\n    constructor(cdpTarget, realmStorage, id, parentId, eventManager, browsingContextStorage, logger) {\n        this.#cdpTarget = cdpTarget;\n        this.#realmStorage = realmStorage;\n        this.#id = id;\n        this.#parentId = parentId;\n        this.#eventManager = eventManager;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#logger = logger;\n    }\n    static create(cdpTarget, realmStorage, id, parentId, eventManager, browsingContextStorage, logger) {\n        const context = new BrowsingContextImpl(cdpTarget, realmStorage, id, parentId, eventManager, browsingContextStorage, logger);\n        context.#initListeners();\n        browsingContextStorage.addContext(context);\n        if (!context.isTopLevelContext()) {\n            context.parent.addChild(context.id);\n        }\n        eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextCreatedEvent,\n            params: context.serializeToBidiValue(),\n        }, context.id);\n        return context;\n    }\n    /**\n     * @see https://html.spec.whatwg.org/multipage/document-sequences.html#navigable\n     */\n    get navigableId() {\n        return this.#loaderId;\n    }\n    delete() {\n        this.#deleteAllChildren();\n        this.#realmStorage.deleteRealms({\n            browsingContextId: this.id,\n        });\n        // Remove context from the parent.\n        if (!this.isTopLevelContext()) {\n            this.parent.#children.delete(this.id);\n        }\n        this.#eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextDestroyedEvent,\n            params: this.serializeToBidiValue(),\n        }, this.id);\n        this.#browsingContextStorage.deleteContextById(this.id);\n    }\n    /** Returns the ID of this context. */\n    get id() {\n        return this.#id;\n    }\n    /** Returns the parent context ID. */\n    get parentId() {\n        return this.#parentId;\n    }\n    /** Returns the parent context. */\n    get parent() {\n        if (this.parentId === null) {\n            return null;\n        }\n        return this.#browsingContextStorage.getContext(this.parentId);\n    }\n    /** Returns all direct children contexts. */\n    get directChildren() {\n        return [...this.#children].map((id) => this.#browsingContextStorage.getContext(id));\n    }\n    /** Returns all children contexts, flattened. */\n    get allChildren() {\n        const children = this.directChildren;\n        return children.concat(...children.map((child) => child.allChildren));\n    }\n    /**\n     * Returns true if this is a top-level context.\n     * This is the case whenever the parent context ID is null.\n     */\n    isTopLevelContext() {\n        return this.#parentId === null;\n    }\n    addChild(childId) {\n        this.#children.add(childId);\n    }\n    #deleteAllChildren() {\n        this.directChildren.map((child) => child.delete());\n    }\n    get #defaultRealm() {\n        if (this.#maybeDefaultRealm === undefined) {\n            throw new Error(`No default realm for browsing context ${this.#id}`);\n        }\n        return this.#maybeDefaultRealm;\n    }\n    get cdpTarget() {\n        return this.#cdpTarget;\n    }\n    updateCdpTarget(cdpTarget) {\n        this.#cdpTarget = cdpTarget;\n        this.#initListeners();\n    }\n    get url() {\n        return this.#url;\n    }\n    async awaitLoaded() {\n        await this.#deferreds.Page.lifecycleEvent.load;\n    }\n    awaitUnblocked() {\n        return this.#cdpTarget.targetUnblocked;\n    }\n    async getOrCreateSandbox(sandbox) {\n        if (sandbox === undefined || sandbox === '') {\n            return this.#defaultRealm;\n        }\n        let maybeSandboxes = this.#realmStorage.findRealms({\n            browsingContextId: this.id,\n            sandbox,\n        });\n        if (maybeSandboxes.length === 0) {\n            await this.#cdpTarget.cdpClient.sendCommand('Page.createIsolatedWorld', {\n                frameId: this.id,\n                worldName: sandbox,\n            });\n            // `Runtime.executionContextCreated` should be emitted by the time the\n            // previous command is done.\n            maybeSandboxes = this.#realmStorage.findRealms({\n                browsingContextId: this.id,\n                sandbox,\n            });\n        }\n        if (maybeSandboxes.length !== 1) {\n            throw Error(`Sandbox ${sandbox} wasn't created.`);\n        }\n        return maybeSandboxes[0];\n    }\n    serializeToBidiValue(maxDepth = 0, addParentField = true) {\n        return {\n            context: this.#id,\n            url: this.url,\n            children: maxDepth > 0\n                ? this.directChildren.map((c) => c.serializeToBidiValue(maxDepth - 1, false))\n                : null,\n            ...(addParentField ? { parent: this.#parentId } : {}),\n        };\n    }\n    #initListeners() {\n        this.#cdpTarget.cdpClient.on('Target.targetInfoChanged', (params) => {\n            if (this.id !== params.targetInfo.targetId) {\n                return;\n            }\n            this.#url = params.targetInfo.url;\n        });\n        this.#cdpTarget.cdpClient.on('Page.frameNavigated', (params) => {\n            if (this.id !== params.frame.id) {\n                return;\n            }\n            this.#url = params.frame.url + (params.frame.urlFragment ?? '');\n            // At the point the page is initialized, all the nested iframes from the\n            // previous page are detached and realms are destroyed.\n            // Remove children from context.\n            this.#deleteAllChildren();\n        });\n        this.#cdpTarget.cdpClient.on('Page.navigatedWithinDocument', (params) => {\n            if (this.id !== params.frameId) {\n                return;\n            }\n            this.#url = params.url;\n            this.#deferreds.Page.navigatedWithinDocument.resolve(params);\n        });\n        this.#cdpTarget.cdpClient.on('Page.lifecycleEvent', (params) => {\n            if (this.id !== params.frameId) {\n                return;\n            }\n            // `timestamp` from the event is MonotonicTime, not real time, so\n            // the best Mapper can do is to set the timestamp to the epoch time\n            // of the event arrived.\n            // https://chromedevtools.github.io/devtools-protocol/tot/Network/#type-MonotonicTime\n            const timestamp = new Date().getTime();\n            switch (params.name) {\n                case 'init':\n                    this.#documentChanged(params.loaderId);\n                    this.#deferreds.documentInitialized.resolve();\n                    break;\n                case 'commit':\n                    this.#loaderId = params.loaderId;\n                    break;\n                case 'DOMContentLoaded':\n                    this.#deferreds.Page.lifecycleEvent.DOMContentLoaded.resolve(params);\n                    this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.DomContentLoadedEvent,\n                        params: {\n                            context: this.id,\n                            navigation: this.#loaderId ?? null,\n                            timestamp,\n                            url: this.#url,\n                        },\n                    }, this.id);\n                    break;\n                case 'load':\n                    this.#deferreds.Page.lifecycleEvent.load.resolve(params);\n                    this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.LoadEvent,\n                        params: {\n                            context: this.id,\n                            navigation: this.#loaderId ?? null,\n                            timestamp,\n                            url: this.#url,\n                        },\n                    }, this.id);\n                    break;\n            }\n            if (params.loaderId !== this.#loaderId) {\n                return;\n            }\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextCreated', (params) => {\n            if (params.context.auxData.frameId !== this.id) {\n                return;\n            }\n            // Only this execution contexts are supported for now.\n            if (!['default', 'isolated'].includes(params.context.auxData.type)) {\n                return;\n            }\n            const realm = new realm_js_1.Realm(this.#realmStorage, this.#browsingContextStorage, params.context.uniqueId, this.id, params.context.id, this.#getOrigin(params), \n            // XXX: differentiate types.\n            'window', \n            // Sandbox name for isolated world.\n            params.context.auxData.type === 'isolated'\n                ? params.context.name\n                : undefined, this.#cdpTarget.cdpSessionId, this.#cdpTarget.cdpClient, this.#eventManager, this.#logger);\n            if (params.context.auxData.isDefault) {\n                this.#maybeDefaultRealm = realm;\n            }\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextDestroyed', (params) => {\n            this.#realmStorage.deleteRealms({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextsCleared', () => {\n            this.#realmStorage.deleteRealms({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n            });\n        });\n    }\n    #getOrigin(params) {\n        if (params.context.auxData.type === 'isolated') {\n            // Sandbox should have the same origin as the context itself, but in CDP\n            // it has an empty one.\n            return this.#defaultRealm.origin;\n        }\n        // https://html.spec.whatwg.org/multipage/origin.html#ascii-serialisation-of-an-origin\n        return ['://', ''].includes(params.context.origin)\n            ? 'null'\n            : params.context.origin;\n    }\n    #documentChanged(loaderId) {\n        // Same document navigation.\n        if (loaderId === undefined || this.#loaderId === loaderId) {\n            if (this.#deferreds.Page.navigatedWithinDocument.isFinished) {\n                this.#deferreds.Page.navigatedWithinDocument =\n                    new deferred_js_1.Deferred();\n            }\n            else {\n                this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed (navigatedWithinDocument)');\n            }\n            return;\n        }\n        this.#resetDeferredsIfFinished();\n        this.#loaderId = loaderId;\n    }\n    #resetDeferredsIfFinished() {\n        if (this.#deferreds.documentInitialized.isFinished) {\n            this.#deferreds.documentInitialized = new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed (document initialized)');\n        }\n        if (this.#deferreds.Page.lifecycleEvent.DOMContentLoaded.isFinished) {\n            this.#deferreds.Page.lifecycleEvent.DOMContentLoaded =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed (DOMContentLoaded)');\n        }\n        if (this.#deferreds.Page.lifecycleEvent.load.isFinished) {\n            this.#deferreds.Page.lifecycleEvent.load =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed (load)');\n        }\n    }\n    async navigate(url, wait) {\n        await this.awaitUnblocked();\n        // TODO: handle loading errors.\n        const cdpNavigateResult = await this.#cdpTarget.cdpClient.sendCommand('Page.navigate', {\n            url,\n            frameId: this.id,\n        });\n        if (cdpNavigateResult.errorText) {\n            throw new protocol_js_1.Message.UnknownErrorException(cdpNavigateResult.errorText);\n        }\n        this.#documentChanged(cdpNavigateResult.loaderId);\n        switch (wait) {\n            case 'none':\n                break;\n            case 'interactive':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#deferreds.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#deferreds.Page.lifecycleEvent.DOMContentLoaded;\n                }\n                break;\n            case 'complete':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#deferreds.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.awaitLoaded();\n                }\n                break;\n        }\n        return {\n            result: {\n                navigation: cdpNavigateResult.loaderId ?? null,\n                url,\n            },\n        };\n    }\n    async reload(ignoreCache, wait) {\n        await this.awaitUnblocked();\n        await this.#cdpTarget.cdpClient.sendCommand('Page.reload', {\n            ignoreCache,\n        });\n        this.#resetDeferredsIfFinished();\n        switch (wait) {\n            case 'none':\n                break;\n            case 'interactive':\n                await this.#deferreds.Page.lifecycleEvent.DOMContentLoaded;\n                break;\n            case 'complete':\n                await this.awaitLoaded();\n                break;\n        }\n        return { result: {} };\n    }\n    async captureScreenshot() {\n        const [, result] = await Promise.all([\n            // XXX: Either make this a proposal in the BiDi spec, or focus the\n            // original tab right after the screenshot is taken.\n            // The screenshot command gets blocked until we focus the active tab.\n            this.#cdpTarget.cdpClient.sendCommand('Page.bringToFront'),\n            this.#cdpTarget.cdpClient.sendCommand('Page.captureScreenshot', {}),\n        ]);\n        return {\n            result: {\n                data: result.data,\n            },\n        };\n    }\n    async print(params) {\n        const printToPdfCdpParams = {\n            printBackground: params.background,\n            landscape: params.orientation === 'landscape',\n            pageRanges: params.pageRanges?.join(',') ?? '',\n            scale: params.scale,\n            preferCSSPageSize: !params.shrinkToFit,\n        };\n        if (params.margin?.bottom) {\n            printToPdfCdpParams.marginBottom = (0, unitConversions_js_1.inchesFromCm)(params.margin.bottom);\n        }\n        if (params.margin?.left) {\n            printToPdfCdpParams.marginLeft = (0, unitConversions_js_1.inchesFromCm)(params.margin.left);\n        }\n        if (params.margin?.right) {\n            printToPdfCdpParams.marginRight = (0, unitConversions_js_1.inchesFromCm)(params.margin.right);\n        }\n        if (params.margin?.top) {\n            printToPdfCdpParams.marginTop = (0, unitConversions_js_1.inchesFromCm)(params.margin.top);\n        }\n        if (params.page?.height) {\n            printToPdfCdpParams.paperHeight = (0, unitConversions_js_1.inchesFromCm)(params.page.height);\n        }\n        if (params.page?.width) {\n            printToPdfCdpParams.paperWidth = (0, unitConversions_js_1.inchesFromCm)(params.page.width);\n        }\n        const result = await this.#cdpTarget.cdpClient.sendCommand('Page.printToPDF', printToPdfCdpParams);\n        return {\n            result: {\n                data: result.data,\n            },\n        };\n    }\n}\nexports.BrowsingContextImpl = BrowsingContextImpl;\n//# sourceMappingURL=browsingContextImpl.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRemoteValuesText = exports.logMessageFormatter = void 0;\nconst specifiers = ['%s', '%d', '%i', '%f', '%o', '%O', '%c'];\nfunction isFormmatSpecifier(str) {\n    return specifiers.some((spec) => str.includes(spec));\n}\n/**\n * @param args input remote values to be format printed\n * @return parsed text of the remote values in specific format\n */\nfunction logMessageFormatter(args) {\n    let output = '';\n    const argFormat = args[0].value.toString();\n    const argValues = args.slice(1, undefined);\n    const tokens = argFormat.split(new RegExp(specifiers.map((spec) => `(${spec})`).join('|'), 'g'));\n    for (const token of tokens) {\n        if (token === undefined || token === '') {\n            continue;\n        }\n        if (isFormmatSpecifier(token)) {\n            const arg = argValues.shift();\n            // raise an exception when less value is provided\n            if (arg === undefined) {\n                throw new Error(`Less value is provided: \"${getRemoteValuesText(args, false)}\"`);\n            }\n            if (token === '%s') {\n                output += stringFromArg(arg);\n            }\n            else if (token === '%d' || token === '%i') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseInt(arg.value.toString(), 10);\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else if (token === '%f') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseFloat(arg.value.toString());\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else {\n                // %o, %O, %c\n                output += toJson(arg);\n            }\n        }\n        else {\n            output += token;\n        }\n    }\n    // raise an exception when more value is provided\n    if (argValues.length > 0) {\n        throw new Error(`More value is provided: \"${getRemoteValuesText(args, false)}\"`);\n    }\n    return output;\n}\nexports.logMessageFormatter = logMessageFormatter;\n/**\n * @param arg input remote value to be parsed\n * @return parsed text of the remote value\n *\n * input: {\"type\": \"number\", \"value\": 1}\n * output: 1\n *\n * input: {\"type\": \"string\", \"value\": \"abc\"}\n * output: \"abc\"\n *\n * input: {\"type\": \"object\",  \"value\": [[\"id\", {\"type\": \"number\", \"value\": 1}]]}\n * output: '{\"id\": 1}'\n *\n * input: {\"type\": \"object\", \"value\": [[\"font-size\", {\"type\": \"string\", \"value\": \"20px\"}]]}\n * output: '{\"font-size\": \"20px\"}'\n */\nfunction toJson(arg) {\n    // arg type validation\n    if (arg.type !== 'array' &&\n        arg.type !== 'bigint' &&\n        arg.type !== 'date' &&\n        arg.type !== 'number' &&\n        arg.type !== 'object' &&\n        arg.type !== 'string') {\n        return stringFromArg(arg);\n    }\n    if (arg.type === 'bigint') {\n        return `${arg.value.toString()}n`;\n    }\n    if (arg.type === 'number') {\n        return arg.value.toString();\n    }\n    if (['date', 'string'].includes(arg.type)) {\n        return JSON.stringify(arg.value);\n    }\n    if (arg.type === 'object') {\n        return `{${arg.value\n            .map((pair) => {\n            return `${JSON.stringify(pair[0])}:${toJson(pair[1])}`;\n        })\n            .join(',')}}`;\n    }\n    if (arg.type === 'array') {\n        return `[${arg.value?.map((val) => toJson(val)).join(',') ?? ''}]`;\n    }\n    throw Error(`Invalid value type: ${arg.toString()}`);\n}\nfunction stringFromArg(arg) {\n    if (!Object.hasOwn(arg, 'value')) {\n        return arg.type;\n    }\n    switch (arg.type) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'bigint':\n            return String(arg.value);\n        case 'regexp':\n            return `/${arg.value.pattern}/${arg.value.flags ?? ''}`;\n        case 'date':\n            return new Date(arg.value).toString();\n        case 'object':\n            return `Object(${arg.value?.length ?? ''})`;\n        case 'array':\n            return `Array(${arg.value?.length ?? ''})`;\n        case 'map':\n            return `Map(${arg.value.length})`;\n        case 'set':\n            return `Set(${arg.value.length})`;\n        case 'node':\n            return 'node';\n        default:\n            return arg.type;\n    }\n}\nfunction getRemoteValuesText(args, formatText) {\n    const arg = args[0];\n    if (!arg) {\n        return '';\n    }\n    // if args[0] is a format specifier, format the args as output\n    if (arg.type === 'string' &&\n        isFormmatSpecifier(arg.value.toString()) &&\n        formatText) {\n        return logMessageFormatter(args);\n    }\n    // if args[0] is not a format specifier, just join the args with \\u0020 (unicode 'SPACE')\n    return args\n        .map((arg) => {\n        return stringFromArg(arg);\n    })\n        .join('\\u0020');\n}\nexports.getRemoteValuesText = getRemoteValuesText;\n//# sourceMappingURL=logHelper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst logHelper_js_1 = require(\"./logHelper.js\");\n/** Converts CDP StackTrace object to BiDi StackTrace object. */\nfunction getBidiStackTrace(cdpStackTrace) {\n    const stackFrames = cdpStackTrace?.callFrames.map((callFrame) => {\n        return {\n            columnNumber: callFrame.columnNumber,\n            functionName: callFrame.functionName,\n            lineNumber: callFrame.lineNumber,\n            url: callFrame.url,\n        };\n    });\n    return stackFrames ? { callFrames: stackFrames } : undefined;\n}\nfunction getLogLevel(consoleApiType) {\n    if (['assert', 'error'].includes(consoleApiType)) {\n        return 'error';\n    }\n    if (['debug', 'trace'].includes(consoleApiType)) {\n        return 'debug';\n    }\n    if (['warn', 'warning'].includes(consoleApiType)) {\n        return 'warn';\n    }\n    return 'info';\n}\nclass LogManager {\n    #eventManager;\n    #realmStorage;\n    #cdpTarget;\n    constructor(cdpTarget, realmStorage, eventManager) {\n        this.#cdpTarget = cdpTarget;\n        this.#realmStorage = realmStorage;\n        this.#eventManager = eventManager;\n    }\n    static create(cdpTarget, realmStorage, eventManager) {\n        const logManager = new LogManager(cdpTarget, realmStorage, eventManager);\n        logManager.#initialize();\n        return logManager;\n    }\n    #initialize() {\n        this.#initializeLogEntryAddedEventListener();\n    }\n    #initializeLogEntryAddedEventListener() {\n        this.#cdpTarget.cdpClient.on('Runtime.consoleAPICalled', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n            const argsPromise = realm === undefined\n                ? Promise.resolve(params.args)\n                : // Properly serialize arguments if possible.\n                    Promise.all(params.args.map((arg) => {\n                        return realm.serializeCdpObject(arg, 'none');\n                    }));\n            this.#eventManager.registerPromiseEvent(argsPromise.then((args) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: getLogLevel(params.type),\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text: (0, logHelper_js_1.getRemoteValuesText)(args, true),\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.stackTrace),\n                    type: 'console',\n                    // Console method is `warn`, not `warning`.\n                    method: params.type === 'warning' ? 'warn' : params.type,\n                    args,\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.exceptionThrown', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.exceptionDetails.executionContextId,\n            });\n            // Try all the best to get the exception text.\n            const textPromise = (async () => {\n                if (!params.exceptionDetails.exception) {\n                    return params.exceptionDetails.text;\n                }\n                if (realm === undefined) {\n                    return JSON.stringify(params.exceptionDetails.exception);\n                }\n                return realm.stringifyObject(params.exceptionDetails.exception);\n            })();\n            this.#eventManager.registerPromiseEvent(textPromise.then((text) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: 'error',\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text,\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.exceptionDetails.stackTrace),\n                    type: 'javascript',\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n    }\n}\nexports.LogManager = LogManager;\n//# sourceMappingURL=logManager.js.map","\"use strict\";\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMap = void 0;\n/**\n * A subclass of Map whose functionality is almost the same as its parent\n * except for the fact that DefaultMap never returns undefined. It provides a\n * default value for keys that do not exist.\n */\nclass DefaultMap extends Map {\n    /** The default value to return whenever a key is not present in the map. */\n    #getDefaultValue;\n    constructor(getDefaultValue, entries) {\n        super(entries);\n        this.#getDefaultValue = getDefaultValue;\n    }\n    get(key) {\n        if (!this.has(key)) {\n            this.set(key, this.#getDefaultValue(key));\n        }\n        return super.get(key);\n    }\n}\nexports.DefaultMap = DefaultMap;\n//# sourceMappingURL=DefaultMap.js.map","\"use strict\";\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkRequest = void 0;\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass NetworkRequest {\n    static #unknown = 'UNKNOWN';\n    requestId;\n    #eventManager;\n    #requestWillBeSentEvent;\n    #requestWillBeSentExtraInfoEvent;\n    #responseReceivedEvent;\n    #responseReceivedExtraInfoEvent;\n    #beforeRequestSentDeferred;\n    #responseReceivedDeferred;\n    constructor(requestId, eventManager) {\n        this.requestId = requestId;\n        this.#eventManager = eventManager;\n        this.#beforeRequestSentDeferred = new deferred_js_1.Deferred();\n        this.#responseReceivedDeferred = new deferred_js_1.Deferred();\n    }\n    onRequestWillBeSentEvent(requestWillBeSentEvent) {\n        if (this.#requestWillBeSentEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#requestWillBeSentEvent = requestWillBeSentEvent;\n        if (this.#requestWillBeSentExtraInfoEvent !== undefined) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n        this.#sendBeforeRequestEvent();\n    }\n    onRequestWillBeSentExtraInfoEvent(requestWillBeSentExtraInfoEvent) {\n        if (this.#requestWillBeSentExtraInfoEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#requestWillBeSentExtraInfoEvent = requestWillBeSentExtraInfoEvent;\n        if (this.#requestWillBeSentEvent !== undefined) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n    }\n    onResponseReceivedEvent(responseReceivedEvent) {\n        if (this.#responseReceivedEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#responseReceivedEvent = responseReceivedEvent;\n        if (!responseReceivedEvent.hasExtraInfo &&\n            !this.#beforeRequestSentDeferred.isFinished) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n        if (!responseReceivedEvent.hasExtraInfo ||\n            this.#responseReceivedExtraInfoEvent !== undefined) {\n            this.#responseReceivedDeferred.resolve();\n        }\n        this.#sendResponseReceivedEvent();\n    }\n    onResponseReceivedEventExtraInfo(responseReceivedExtraInfoEvent) {\n        if (this.#responseReceivedExtraInfoEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#responseReceivedExtraInfoEvent = responseReceivedExtraInfoEvent;\n        if (this.#responseReceivedEvent !== undefined) {\n            this.#responseReceivedDeferred.resolve();\n        }\n    }\n    onLoadingFailedEvent(loadingFailedEvent) {\n        this.#beforeRequestSentDeferred.resolve();\n        this.#responseReceivedDeferred.reject(loadingFailedEvent);\n        const params = {\n            ...this.#getBaseEventParams(),\n            errorText: loadingFailedEvent.errorText,\n        };\n        this.#eventManager.registerEvent({\n            method: protocol_js_1.Network.EventNames.FetchErrorEvent,\n            params,\n        }, this.#requestWillBeSentEvent?.frameId ?? null);\n    }\n    #sendBeforeRequestEvent() {\n        if (!this.#isIgnoredEvent()) {\n            this.#eventManager.registerPromiseEvent(this.#beforeRequestSentDeferred.then(() => this.#getBeforeRequestEvent()), this.#requestWillBeSentEvent?.frameId ?? null, protocol_js_1.Network.EventNames.BeforeRequestSentEvent);\n        }\n    }\n    #getBeforeRequestEvent() {\n        if (this.#requestWillBeSentEvent === undefined) {\n            throw new Error('RequestWillBeSentEvent is not set');\n        }\n        const params = {\n            ...this.#getBaseEventParams(),\n            initiator: { type: this.#getInitiatorType() },\n        };\n        return {\n            method: protocol_js_1.Network.EventNames.BeforeRequestSentEvent,\n            params,\n        };\n    }\n    #getBaseEventParams() {\n        return {\n            context: this.#requestWillBeSentEvent?.frameId ?? null,\n            navigation: this.#requestWillBeSentEvent?.loaderId ?? null,\n            // TODO: implement.\n            redirectCount: 0,\n            request: this.#getRequestData(),\n            // Timestamp should be in milliseconds, while CDP provides it in seconds.\n            timestamp: Math.round((this.#requestWillBeSentEvent?.wallTime ?? 0) * 1000),\n        };\n    }\n    #getRequestData() {\n        const cookies = this.#requestWillBeSentExtraInfoEvent === undefined\n            ? []\n            : NetworkRequest.#getCookies(this.#requestWillBeSentExtraInfoEvent.associatedCookies);\n        return {\n            request: this.#requestWillBeSentEvent?.requestId ?? NetworkRequest.#unknown,\n            url: this.#requestWillBeSentEvent?.request.url ?? NetworkRequest.#unknown,\n            method: this.#requestWillBeSentEvent?.request.method ?? NetworkRequest.#unknown,\n            headers: Object.keys(this.#requestWillBeSentEvent?.request.headers ?? []).map((key) => ({\n                name: key,\n                value: this.#requestWillBeSentEvent?.request.headers[key],\n            })),\n            cookies,\n            // TODO: implement.\n            headersSize: -1,\n            // TODO: implement.\n            bodySize: 0,\n            timings: {\n                // TODO: implement.\n                timeOrigin: 0,\n                // TODO: implement.\n                requestTime: 0,\n                // TODO: implement.\n                redirectStart: 0,\n                // TODO: implement.\n                redirectEnd: 0,\n                // TODO: implement.\n                fetchStart: 0,\n                // TODO: implement.\n                dnsStart: 0,\n                // TODO: implement.\n                dnsEnd: 0,\n                // TODO: implement.\n                connectStart: 0,\n                // TODO: implement.\n                connectEnd: 0,\n                // TODO: implement.\n                tlsStart: 0,\n                // TODO: implement.\n                tlsEnd: 0,\n                // TODO: implement.\n                requestStart: 0,\n                // TODO: implement.\n                responseStart: 0,\n                // TODO: implement.\n                responseEnd: 0,\n            },\n        };\n    }\n    #getInitiatorType() {\n        switch (this.#requestWillBeSentEvent?.initiator.type) {\n            case 'parser':\n            case 'script':\n            case 'preflight':\n                return this.#requestWillBeSentEvent.initiator.type;\n            default:\n                return 'other';\n        }\n    }\n    static #getCookiesSameSite(cdpSameSiteValue) {\n        switch (cdpSameSiteValue) {\n            case 'Strict':\n                return 'strict';\n            case 'Lax':\n                return 'lax';\n            default:\n                return 'none';\n        }\n    }\n    static #getCookies(associatedCookies) {\n        return associatedCookies.map((cookieInfo) => {\n            return {\n                name: cookieInfo.cookie.name,\n                value: cookieInfo.cookie.value,\n                domain: cookieInfo.cookie.domain,\n                path: cookieInfo.cookie.path,\n                expires: cookieInfo.cookie.expires,\n                size: cookieInfo.cookie.size,\n                httpOnly: cookieInfo.cookie.httpOnly,\n                secure: cookieInfo.cookie.secure,\n                sameSite: NetworkRequest.#getCookiesSameSite(cookieInfo.cookie.sameSite),\n            };\n        });\n    }\n    #sendResponseReceivedEvent() {\n        if (!this.#isIgnoredEvent()) {\n            // Wait for both ResponseReceived and ResponseReceivedExtraInfo events.\n            this.#eventManager.registerPromiseEvent(this.#responseReceivedDeferred.then(() => this.#getResponseReceivedEvent()), this.#responseReceivedEvent?.frameId ?? null, protocol_js_1.Network.EventNames.ResponseCompletedEvent);\n        }\n    }\n    #getResponseReceivedEvent() {\n        if (this.#responseReceivedEvent === undefined) {\n            throw new Error('ResponseReceivedEvent is not set');\n        }\n        if (this.#requestWillBeSentEvent === undefined) {\n            throw new Error('RequestWillBeSentEvent is not set');\n        }\n        return {\n            method: protocol_js_1.Network.EventNames.ResponseCompletedEvent,\n            params: {\n                ...this.#getBaseEventParams(),\n                response: {\n                    url: this.#responseReceivedEvent.response.url,\n                    protocol: this.#responseReceivedEvent.response.protocol,\n                    status: this.#responseReceivedEvent.response.status,\n                    statusText: this.#responseReceivedEvent.response.statusText,\n                    // Check if this is correct.\n                    fromCache: this.#responseReceivedEvent.response.fromDiskCache ||\n                        this.#responseReceivedEvent.response.fromPrefetchCache,\n                    // TODO: implement.\n                    headers: this.#getHeaders(this.#responseReceivedEvent.response.headers),\n                    mimeType: this.#responseReceivedEvent.response.mimeType,\n                    bytesReceived: this.#responseReceivedEvent.response.encodedDataLength,\n                    headersSize: this.#responseReceivedExtraInfoEvent?.headersText?.length ?? -1,\n                    // TODO: consider removing from spec.\n                    bodySize: -1,\n                    content: {\n                        // TODO: consider removing from spec.\n                        size: -1,\n                    },\n                },\n            },\n        };\n    }\n    #getHeaders(headers) {\n        return Object.keys(headers).map((key) => ({\n            name: key,\n            value: headers[key],\n        }));\n    }\n    #isIgnoredEvent() {\n        return (this.#requestWillBeSentEvent?.request.url.endsWith('/favicon.ico') ??\n            false);\n    }\n}\nexports.NetworkRequest = NetworkRequest;\n//# sourceMappingURL=networkRequest.js.map","\"use strict\";\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkProcessor = void 0;\nconst DefaultMap_js_1 = require(\"../../../utils/DefaultMap.js\");\nconst networkRequest_js_1 = require(\"./networkRequest.js\");\nclass NetworkProcessor {\n    #eventManager;\n    /**\n     * Map of request ID to NetworkRequest objects. Needed as long as information\n     * about requests comes from different events.\n     */\n    #requestMap;\n    constructor(eventManager) {\n        this.#eventManager = eventManager;\n        this.#requestMap = new DefaultMap_js_1.DefaultMap((requestId) => new networkRequest_js_1.NetworkRequest(requestId, this.#eventManager));\n    }\n    static async create(cdpClient, eventManager) {\n        const networkProcessor = new NetworkProcessor(eventManager);\n        cdpClient.on('Network.requestWillBeSent', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onRequestWillBeSentEvent(params);\n        });\n        cdpClient.on('Network.requestWillBeSentExtraInfo', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onRequestWillBeSentExtraInfoEvent(params);\n        });\n        cdpClient.on('Network.responseReceived', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onResponseReceivedEvent(params);\n        });\n        cdpClient.on('Network.responseReceivedExtraInfo', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onResponseReceivedEventExtraInfo(params);\n        });\n        cdpClient.on('Network.loadingFailed', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onLoadingFailedEvent(params);\n        });\n        await cdpClient.sendCommand('Network.enable');\n        return networkProcessor;\n    }\n    #getOrCreateNetworkRequest(requestId) {\n        return this.#requestMap.get(requestId);\n    }\n}\nexports.NetworkProcessor = NetworkProcessor;\n//# sourceMappingURL=networkProcessor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpTarget = void 0;\nconst logManager_js_1 = require(\"../log/logManager.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst networkProcessor_js_1 = require(\"../network/networkProcessor.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nclass CdpTarget {\n    #targetId;\n    #parentTargetId;\n    #cdpClient;\n    #cdpSessionId;\n    #eventManager;\n    #preloadScriptStorage;\n    #logger;\n    #targetUnblocked;\n    #networkDomainActivated;\n    #browsingContextStorage;\n    static create(targetId, parentTargetId, cdpClient, cdpSessionId, realmStorage, eventManager, preloadScriptStorage, browsingContextStorage, logger) {\n        const cdpTarget = new CdpTarget(targetId, parentTargetId, cdpClient, cdpSessionId, eventManager, preloadScriptStorage, browsingContextStorage, logger);\n        logManager_js_1.LogManager.create(cdpTarget, realmStorage, eventManager);\n        cdpTarget.#setEventListeners();\n        // No need to await.\n        // Deferred will be resolved when the target is unblocked.\n        void cdpTarget.#unblock();\n        return cdpTarget;\n    }\n    constructor(targetId, parentTargetId, cdpClient, cdpSessionId, eventManager, preloadScriptStorage, browsingContextStorage, logger) {\n        this.#targetId = targetId;\n        this.#parentTargetId = parentTargetId;\n        this.#cdpClient = cdpClient;\n        this.#cdpSessionId = cdpSessionId;\n        this.#eventManager = eventManager;\n        this.#preloadScriptStorage = preloadScriptStorage;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#logger = logger;\n        this.#networkDomainActivated = false;\n        this.#targetUnblocked = new deferred_js_1.Deferred();\n    }\n    /** Returns a promise that resolves when the target is unblocked. */\n    get targetUnblocked() {\n        return this.#targetUnblocked;\n    }\n    get targetId() {\n        return this.#targetId;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    /**\n     * Needed for CDP escape path.\n     */\n    get cdpSessionId() {\n        return this.#cdpSessionId;\n    }\n    /**\n     * Enables all the required CDP domains and unblocks the target.\n     */\n    async #unblock() {\n        try {\n            // Enable Network domain, if it is enabled globally.\n            // TODO: enable Network domain for OOPiF targets.\n            if (this.#eventManager.isNetworkDomainEnabled) {\n                await this.enableNetworkDomain();\n            }\n            await this.#cdpClient.sendCommand('Runtime.enable');\n            await this.#cdpClient.sendCommand('Page.enable');\n            await this.#cdpClient.sendCommand('Page.setLifecycleEventsEnabled', {\n                enabled: true,\n            });\n            await this.#cdpClient.sendCommand('Target.setAutoAttach', {\n                autoAttach: true,\n                waitForDebuggerOnStart: true,\n                flatten: true,\n            });\n            await this.#loadPreloadScripts();\n            await this.#cdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n        }\n        catch (error) {\n            // The target might have been closed before the initialization finished.\n            if (!this.#cdpClient.isCloseError(error)) {\n                throw error;\n            }\n        }\n        this.#targetUnblocked.resolve();\n    }\n    /**\n     * Enables the Network domain (creates NetworkProcessor on the target's cdp\n     * client) if it is not enabled yet.\n     */\n    async enableNetworkDomain() {\n        if (!this.#networkDomainActivated) {\n            this.#networkDomainActivated = true;\n            await networkProcessor_js_1.NetworkProcessor.create(this.cdpClient, this.#eventManager);\n        }\n    }\n    #setEventListeners() {\n        this.#cdpClient.on('*', (cdpMethod, params) => {\n            this.#eventManager.registerEvent({\n                method: protocol_js_1.CDP.EventNames.EventReceivedEvent,\n                params: {\n                    cdpMethod: cdpMethod,\n                    cdpParams: params ?? {},\n                    cdpSession: this.#cdpSessionId,\n                },\n            }, null);\n        });\n    }\n    /** Loads all top-level and parent preload scripts. */\n    async #loadPreloadScripts() {\n        for (const script of this.#preloadScriptStorage.findPreloadScripts({\n            contextIds: [null, this.#parentTargetId],\n        })) {\n            const { functionDeclaration, sandbox } = script;\n            // The spec provides a function, and CDP expects an evaluation.\n            const cdpPreloadScriptId = await this.addPreloadScript(`(${functionDeclaration})();`, sandbox);\n            // Upon attaching to a new target, run preload scripts on each execution\n            // context before `Runtime.runIfWaitingForDebugger`.\n            //\n            // Otherwise a browsing context might be created without the evaluation of\n            // preload scripts.\n            await Promise.all(this.#browsingContextStorage\n                .getAllContexts()\n                .filter((context) => context.cdpTarget === this)\n                .map((context) => context\n                .getOrCreateSandbox(sandbox)\n                .then((realm) => this.cdpClient.sendCommand('Runtime.evaluate', {\n                expression: `(${functionDeclaration})();`,\n                contextId: realm.executionContextId,\n            }))\n                .catch((error) => {\n                this.#logger?.(log_js_1.LogType.cdp, 'Could not evaluate preload script', error);\n            })));\n            this.#preloadScriptStorage.appendCdpPreloadScript(script, {\n                target: this,\n                preloadScriptId: cdpPreloadScriptId,\n            });\n        }\n    }\n    /**\n     * Issues `Page.addScriptToEvaluateOnNewDocument` CDP command with the given\n     * script source in evaluated form and world name / sandbox.\n     *\n     * @return The CDP preload script ID.\n     */\n    async addPreloadScript(scriptSource, sandbox) {\n        const result = await this.cdpClient.sendCommand('Page.addScriptToEvaluateOnNewDocument', {\n            source: scriptSource,\n            worldName: sandbox,\n        });\n        return result.identifier;\n    }\n    /**\n     * Issues `Page.removeScriptToEvaluateOnNewDocument` CDP command with the\n     * given CDP preload script ID.\n     */\n    async removePreloadScript(cdpPreloadScriptId) {\n        await this.cdpClient.sendCommand('Page.removeScriptToEvaluateOnNewDocument', {\n            identifier: cdpPreloadScriptId,\n        });\n    }\n}\nexports.CdpTarget = CdpTarget;\n//# sourceMappingURL=cdpTarget.js.map","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreloadScriptStorage = void 0;\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst uuid_1 = require(\"uuid\");\n/**\n * Container class for preload scripts.\n *\n * BiDi IDs are generated by the server and are unique within the context.\n *\n * CDP preload script IDs are generated by the client and are unique\n * within the session.\n *\n * The mapping between BiDi and CDP preload script IDs is 1:many.\n * BiDi IDs are needed by the mapper to keep track of potential multiple CDP IDs\n * in the client.\n *\n * This class does not concern itself with the validity of the IDs.\n */\nclass PreloadScriptStorage {\n    /** Tracks all BiDi preload scripts.  */\n    #scripts = new Set();\n    /** Finds all entries that match the given filter. */\n    findPreloadScripts(filter) {\n        if (!filter) {\n            return [...this.#scripts];\n        }\n        return [...this.#scripts].filter((script) => {\n            if (filter.id !== undefined && filter.id !== script.id) {\n                return false;\n            }\n            if (filter.contextId !== undefined &&\n                filter.contextId !== script.contextId) {\n                return false;\n            }\n            if (filter.contextIds !== undefined &&\n                !filter.contextIds.includes(script.contextId)) {\n                return false;\n            }\n            return true;\n        });\n    }\n    /**\n     * Keeps track of the given CDP preload scripts associated with the given\n     * browsing context ID.\n     *\n     * @param contextId Browsing context ID, or null for global context.\n     * @param cdpPreloadScripts CDP preload scripts.\n     * @param functionDeclaration The script itself, in a format expected by the spec\n     *   i.e. a function.\n     */\n    addPreloadScripts(contextId, cdpPreloadScripts, functionDeclaration, sandbox) {\n        // Generate a random ID.\n        const bidiId = (0, uuid_1.v4)();\n        const preloadScript = {\n            id: bidiId,\n            contextId,\n            cdpPreloadScripts,\n            functionDeclaration,\n            sandbox,\n        };\n        this.#scripts.add(preloadScript);\n        return preloadScript;\n    }\n    /**\n     * Keeps track of the given CDP preload script in the given BiDi preload\n     * script.\n     */\n    appendCdpPreloadScript(script, cdpPreloadScript) {\n        script.cdpPreloadScripts.push(cdpPreloadScript);\n    }\n    /** Deletes all BiDi preload script entries that match the given filter. */\n    removeBiDiPreloadScripts(filter) {\n        for (const preloadScript of this.findPreloadScripts(filter)) {\n            this.#scripts.delete(preloadScript);\n        }\n    }\n    /** Deletes all CDP preload script entries that match the given filter. */\n    removeCdpPreloadScripts(filter) {\n        for (const preloadScript of this.#scripts) {\n            preloadScript.cdpPreloadScripts = preloadScript.cdpPreloadScripts.filter((cdpPreloadScript) => {\n                if (filter?.targetId !== undefined &&\n                    filter.targetId !== cdpPreloadScript.target.targetId) {\n                    return true;\n                }\n                if (filter?.sessionId !== undefined &&\n                    filter.sessionId !== cdpPreloadScript.target.cdpSessionId) {\n                    return true;\n                }\n                return false;\n            });\n        }\n    }\n}\nexports.PreloadScriptStorage = PreloadScriptStorage;\n//# sourceMappingURL=PreloadScriptStorage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst browsingContextImpl_js_1 = require(\"./browsingContextImpl.js\");\nconst cdpTarget_js_1 = require(\"./cdpTarget.js\");\nconst PreloadScriptStorage_js_1 = require(\"./PreloadScriptStorage.js\");\nclass BrowsingContextProcessor {\n    #browsingContextStorage;\n    #cdpConnection;\n    #eventManager;\n    #logger;\n    #realmStorage;\n    #selfTargetId;\n    #preloadScriptStorage;\n    constructor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger) {\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#cdpConnection = cdpConnection;\n        this.#eventManager = eventManager;\n        this.#logger = logger;\n        this.#realmStorage = realmStorage;\n        this.#selfTargetId = selfTargetId;\n        this.#preloadScriptStorage = new PreloadScriptStorage_js_1.PreloadScriptStorage();\n        this.#setEventListeners(this.#cdpConnection.browserClient());\n    }\n    /**\n     * This method is called for each CDP session, since this class is responsible\n     * for creating and destroying all targets and browsing contexts.\n     */\n    #setEventListeners(cdpClient) {\n        cdpClient.on('Target.attachedToTarget', (params) => {\n            this.#handleAttachedToTargetEvent(params, cdpClient);\n        });\n        cdpClient.on('Target.detachedFromTarget', (params) => {\n            this.#handleDetachedFromTargetEvent(params);\n        });\n        cdpClient.on('Page.frameAttached', (params) => {\n            this.#handleFrameAttachedEvent(params);\n        });\n        cdpClient.on('Page.frameDetached', (params) => {\n            this.#handleFrameDetachedEvent(params);\n        });\n    }\n    #handleFrameAttachedEvent(params) {\n        const parentBrowsingContext = this.#browsingContextStorage.findContext(params.parentFrameId);\n        if (parentBrowsingContext !== undefined) {\n            browsingContextImpl_js_1.BrowsingContextImpl.create(parentBrowsingContext.cdpTarget, this.#realmStorage, params.frameId, params.parentFrameId, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        }\n    }\n    #handleFrameDetachedEvent(params) {\n        // In case of OOPiF no need in deleting BrowsingContext.\n        if (params.reason === 'swap') {\n            return;\n        }\n        this.#browsingContextStorage.findContext(params.frameId)?.delete();\n    }\n    #handleAttachedToTargetEvent(params, parentSessionCdpClient) {\n        const { sessionId, targetInfo } = params;\n        const targetCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n        if (!this.#isValidTarget(targetInfo)) {\n            // DevTools or some other not supported by BiDi target. Just release\n            // debugger  and ignore them.\n            targetCdpClient\n                .sendCommand('Runtime.runIfWaitingForDebugger')\n                .then(() => parentSessionCdpClient.sendCommand('Target.detachFromTarget', params))\n                .catch((error) => this.#logger?.(log_js_1.LogType.system, error));\n            return;\n        }\n        this.#logger?.(log_js_1.LogType.browsingContexts, 'AttachedToTarget event received:', JSON.stringify(params, null, 2));\n        this.#setEventListeners(targetCdpClient);\n        const maybeContext = this.#browsingContextStorage.findContext(targetInfo.targetId);\n        const cdpTarget = cdpTarget_js_1.CdpTarget.create(targetInfo.targetId, maybeContext?.parentId ?? null, targetCdpClient, sessionId, this.#realmStorage, this.#eventManager, this.#preloadScriptStorage, this.#browsingContextStorage, this.#logger);\n        if (maybeContext) {\n            // OOPiF.\n            maybeContext.updateCdpTarget(cdpTarget);\n        }\n        else {\n            // New context.\n            browsingContextImpl_js_1.BrowsingContextImpl.create(cdpTarget, this.#realmStorage, targetInfo.targetId, null, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        }\n    }\n    #handleDetachedFromTargetEvent(params) {\n        // XXX: params.targetId is deprecated. Update this class to track using\n        // params.sessionId instead.\n        // https://github.com/GoogleChromeLabs/chromium-bidi/issues/60\n        const contextId = params.targetId;\n        this.#browsingContextStorage.findContext(contextId)?.delete();\n        this.#preloadScriptStorage.removeCdpPreloadScripts({ targetId: contextId });\n    }\n    async #getRealm(target) {\n        if ('realm' in target) {\n            return this.#realmStorage.getRealm({\n                realmId: target.realm,\n            });\n        }\n        const context = this.#browsingContextStorage.getContext(target.context);\n        return context.getOrCreateSandbox(target.sandbox);\n    }\n    process_browsingContext_getTree(params) {\n        const resultContexts = params.root === undefined\n            ? this.#browsingContextStorage.getTopLevelContexts()\n            : [this.#browsingContextStorage.getContext(params.root)];\n        return {\n            result: {\n                contexts: resultContexts.map((c) => c.serializeToBidiValue(params.maxDepth ?? Number.MAX_VALUE)),\n            },\n        };\n    }\n    async process_browsingContext_create(params) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        let referenceContext;\n        if (params.referenceContext !== undefined) {\n            referenceContext = this.#browsingContextStorage.getContext(params.referenceContext);\n            if (!referenceContext.isTopLevelContext()) {\n                throw new protocol_js_1.Message.InvalidArgumentException(`referenceContext should be a top-level context`);\n            }\n        }\n        let result;\n        switch (params.type) {\n            case 'tab':\n                result = await browserCdpClient.sendCommand('Target.createTarget', {\n                    url: 'about:blank',\n                    newWindow: false,\n                });\n                break;\n            case 'window':\n                result = await browserCdpClient.sendCommand('Target.createTarget', {\n                    url: 'about:blank',\n                    newWindow: true,\n                });\n                break;\n        }\n        // Wait for the new tab to be loaded to avoid race conditions in the\n        // `browsingContext` events, when the `browsingContext.domContentLoaded` and\n        // `browsingContext.load` events from the initial `about:blank` navigation\n        // are emitted after the next navigation is started.\n        // Details: https://github.com/web-platform-tests/wpt/issues/35846\n        const contextId = result.targetId;\n        const context = this.#browsingContextStorage.getContext(contextId);\n        await context.awaitLoaded();\n        return {\n            result: {\n                context: context.id,\n            },\n        };\n    }\n    process_browsingContext_navigate(params) {\n        const context = this.#browsingContextStorage.getContext(params.context);\n        return context.navigate(params.url, params.wait ?? 'none');\n    }\n    process_browsingContext_reload(params) {\n        const context = this.#browsingContextStorage.getContext(params.context);\n        return context.reload(params.ignoreCache ?? false, params.wait ?? 'none');\n    }\n    async process_browsingContext_captureScreenshot(params) {\n        const context = this.#browsingContextStorage.getContext(params.context);\n        return context.captureScreenshot();\n    }\n    async process_browsingContext_print(params) {\n        const context = this.#browsingContextStorage.getContext(params.context);\n        return context.print(params);\n    }\n    async process_script_addPreloadScript(params) {\n        if (params.arguments !== undefined && params.arguments.length > 0) {\n            // TODO: Handle arguments.\n            throw new Error('add preload script arguments are not supported');\n        }\n        const cdpTargets = new Set(\n        // TODO: The unique target can be in a non-top-level browsing context.\n        // We need all the targets.\n        // To get them, we can walk through all the contexts and collect their targets into the set.\n        params.context === undefined || params.context === null\n            ? this.#browsingContextStorage\n                .getTopLevelContexts()\n                .map((context) => context.cdpTarget)\n            : [this.#browsingContextStorage.getContext(params.context).cdpTarget]);\n        const cdpPreloadScripts = [];\n        for (const cdpTarget of cdpTargets) {\n            const cdpPreloadScriptId = await cdpTarget.addPreloadScript(\n            // The spec provides a function, and CDP expects an evaluation.\n            `(${params.functionDeclaration})();`, params.sandbox);\n            cdpPreloadScripts.push({\n                target: cdpTarget,\n                preloadScriptId: cdpPreloadScriptId,\n            });\n        }\n        const preloadScript = this.#preloadScriptStorage.addPreloadScripts(params.context ?? null, cdpPreloadScripts, params.functionDeclaration, params.sandbox);\n        return {\n            result: {\n                script: preloadScript.id,\n            },\n        };\n    }\n    async process_script_removePreloadScript(params) {\n        const bidiId = params.script;\n        const scripts = this.#preloadScriptStorage.findPreloadScripts({\n            id: bidiId,\n        });\n        if (scripts.length === 0) {\n            throw new protocol_js_1.Message.NoSuchScriptException(`No preload script with BiDi ID '${bidiId}'`);\n        }\n        for (const script of scripts) {\n            for (const cdpPreloadScript of script.cdpPreloadScripts) {\n                const cdpTarget = cdpPreloadScript.target;\n                const cdpPreloadScriptId = cdpPreloadScript.preloadScriptId;\n                await cdpTarget.removePreloadScript(cdpPreloadScriptId);\n            }\n        }\n        this.#preloadScriptStorage.removeBiDiPreloadScripts({\n            id: bidiId,\n        });\n        return { result: {} };\n    }\n    async process_script_evaluate(params) {\n        const realm = await this.#getRealm(params.target);\n        return realm.scriptEvaluate(params.expression, params.awaitPromise, params.resultOwnership ?? 'none', params.serializationOptions ?? {});\n    }\n    process_script_getRealms(params) {\n        if (params.context !== undefined) {\n            // Make sure the context is known.\n            this.#browsingContextStorage.getContext(params.context);\n        }\n        const realms = this.#realmStorage\n            .findRealms({\n            browsingContextId: params.context,\n            type: params.type,\n        })\n            .map((realm) => realm.toBiDi());\n        return { result: { realms } };\n    }\n    async process_script_callFunction(params) {\n        const realm = await this.#getRealm(params.target);\n        return realm.callFunction(params.functionDeclaration, params.this || {\n            type: 'undefined',\n        }, // `this` is `undefined` by default.\n        params.arguments || [], // `arguments` is `[]` by default.\n        params.awaitPromise, params.resultOwnership ?? 'none', params.serializationOptions ?? {});\n    }\n    async process_script_disown(params) {\n        const realm = await this.#getRealm(params.target);\n        await Promise.all(params.handles.map(async (h) => realm.disown(h)));\n        return { result: {} };\n    }\n    async process_browsingContext_close(commandParams) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        const context = this.#browsingContextStorage.getContext(commandParams.context);\n        if (!context.isTopLevelContext()) {\n            throw new protocol_js_1.Message.InvalidArgumentException('A top-level browsing context cannot be closed.');\n        }\n        const detachedFromTargetPromise = new Promise((resolve) => {\n            const onContextDestroyed = (eventParams) => {\n                if (eventParams.targetId === commandParams.context) {\n                    browserCdpClient.off('Target.detachedFromTarget', onContextDestroyed);\n                    resolve();\n                }\n            };\n            browserCdpClient.on('Target.detachedFromTarget', onContextDestroyed);\n        });\n        await browserCdpClient.sendCommand('Target.closeTarget', {\n            targetId: commandParams.context,\n        });\n        // Sometimes CDP command finishes before `detachedFromTarget` event,\n        // sometimes after. Wait for the CDP command to be finished, and then wait\n        // for `detachedFromTarget` if it hasn't emitted.\n        await detachedFromTargetPromise;\n        return { result: {} };\n    }\n    #isValidTarget(target) {\n        if (target.targetId === this.#selfTargetId) {\n            return false;\n        }\n        return ['page', 'iframe'].includes(target.type);\n    }\n    async process_cdp_sendCommand(params) {\n        const client = params.cdpSession\n            ? this.#cdpConnection.getCdpClient(params.cdpSession)\n            : this.#cdpConnection.browserClient();\n        const sendCdpCommandResult = await client.sendCommand(params.cdpMethod, params.cdpParams);\n        return {\n            result: sendCdpCommandResult,\n            cdpSession: params.cdpSession,\n        };\n    }\n    process_cdp_getSession(params) {\n        const context = params.context;\n        const sessionId = this.#browsingContextStorage.getContext(context).cdpTarget.cdpSessionId;\n        if (sessionId === undefined) {\n            return { result: { cdpSession: null } };\n        }\n        return { result: { cdpSession: sessionId } };\n    }\n}\nexports.BrowsingContextProcessor = BrowsingContextProcessor;\n//# sourceMappingURL=browsingContextProcessor.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutgoingBidiMessage = void 0;\nclass OutgoingBidiMessage {\n    #message;\n    #channel;\n    constructor(message, channel) {\n        this.#message = message;\n        this.#channel = channel;\n    }\n    static async createFromPromise(messagePromise, channel) {\n        return messagePromise.then((message) => new OutgoingBidiMessage(message, channel));\n    }\n    static createResolved(message, channel) {\n        return Promise.resolve(new OutgoingBidiMessage(message, channel));\n    }\n    get message() {\n        return this.#message;\n    }\n    get channel() {\n        return this.#channel;\n    }\n}\nexports.OutgoingBidiMessage = OutgoingBidiMessage;\n//# sourceMappingURL=OutgoingBidiMessage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandProcessor = void 0;\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst browsingContextProcessor_js_1 = require(\"./domains/context/browsingContextProcessor.js\");\nconst OutgoingBidiMessage_js_1 = require(\"./OutgoingBidiMessage.js\");\nclass BidiNoOpParser {\n    parseAddPreloadScriptParams(params) {\n        return params;\n    }\n    parseRemovePreloadScriptParams(params) {\n        return params;\n    }\n    parseGetRealmsParams(params) {\n        return params;\n    }\n    parseCallFunctionParams(params) {\n        return params;\n    }\n    parseEvaluateParams(params) {\n        return params;\n    }\n    parseDisownParams(params) {\n        return params;\n    }\n    parseSendCommandParams(params) {\n        return params;\n    }\n    parseGetSessionParams(params) {\n        return params;\n    }\n    parseSubscribeParams(params) {\n        return params;\n    }\n    parseNavigateParams(params) {\n        return params;\n    }\n    parseReloadParams(params) {\n        return params;\n    }\n    parseGetTreeParams(params) {\n        return params;\n    }\n    parseCreateParams(params) {\n        return params;\n    }\n    parseCloseParams(params) {\n        return params;\n    }\n    parseCaptureScreenshotParams(params) {\n        return params;\n    }\n    parsePrintParams(params) {\n        return params;\n    }\n}\nclass CommandProcessor extends EventEmitter_js_1.EventEmitter {\n    #contextProcessor;\n    #eventManager;\n    #parser;\n    #logger;\n    constructor(realmStorage, cdpConnection, eventManager, selfTargetId, parser = new BidiNoOpParser(), browsingContextStorage, logger) {\n        super();\n        this.#eventManager = eventManager;\n        this.#logger = logger;\n        this.#contextProcessor = new browsingContextProcessor_js_1.BrowsingContextProcessor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger);\n        this.#parser = parser;\n    }\n    static #process_session_status() {\n        return { result: { ready: false, message: 'already connected' } };\n    }\n    async #process_session_subscribe(params, channel) {\n        await this.#eventManager.subscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #process_session_unsubscribe(params, channel) {\n        await this.#eventManager.unsubscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #processCommand(commandData) {\n        switch (commandData.method) {\n            case 'session.status':\n                return CommandProcessor.#process_session_status();\n            case 'session.subscribe':\n                return this.#process_session_subscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'session.unsubscribe':\n                return this.#process_session_unsubscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'browsingContext.create':\n                return this.#contextProcessor.process_browsingContext_create(this.#parser.parseCreateParams(commandData.params));\n            case 'browsingContext.close':\n                return this.#contextProcessor.process_browsingContext_close(this.#parser.parseCloseParams(commandData.params));\n            case 'browsingContext.getTree':\n                return this.#contextProcessor.process_browsingContext_getTree(this.#parser.parseGetTreeParams(commandData.params));\n            case 'browsingContext.navigate':\n                return this.#contextProcessor.process_browsingContext_navigate(this.#parser.parseNavigateParams(commandData.params));\n            case 'browsingContext.captureScreenshot':\n                return this.#contextProcessor.process_browsingContext_captureScreenshot(this.#parser.parseCaptureScreenshotParams(commandData.params));\n            case 'browsingContext.print':\n                return this.#contextProcessor.process_browsingContext_print(this.#parser.parsePrintParams(commandData.params));\n            case 'browsingContext.reload':\n                return this.#contextProcessor.process_browsingContext_reload(this.#parser.parseReloadParams(commandData.params));\n            case 'script.addPreloadScript':\n                return this.#contextProcessor.process_script_addPreloadScript(this.#parser.parseAddPreloadScriptParams(commandData.params));\n            case 'script.removePreloadScript':\n                return this.#contextProcessor.process_script_removePreloadScript(this.#parser.parseRemovePreloadScriptParams(commandData.params));\n            case 'script.getRealms':\n                return this.#contextProcessor.process_script_getRealms(this.#parser.parseGetRealmsParams(commandData.params));\n            case 'script.callFunction':\n                return this.#contextProcessor.process_script_callFunction(this.#parser.parseCallFunctionParams(commandData.params));\n            case 'script.evaluate':\n                return this.#contextProcessor.process_script_evaluate(this.#parser.parseEvaluateParams(commandData.params));\n            case 'script.disown':\n                return this.#contextProcessor.process_script_disown(this.#parser.parseDisownParams(commandData.params));\n            case 'cdp.sendCommand':\n                return this.#contextProcessor.process_cdp_sendCommand(this.#parser.parseSendCommandParams(commandData.params));\n            case 'cdp.getSession':\n                return this.#contextProcessor.process_cdp_getSession(this.#parser.parseGetSessionParams(commandData.params));\n        }\n        // Intentionally kept outside of the switch statement to ensure that\n        // ESLint @typescript-eslint/switch-exhaustiveness-check triggers if a new\n        // command is added.\n        throw new protocol_js_1.Message.UnknownCommandException(`Unknown command '${commandData.method}'.`);\n    }\n    async processCommand(command) {\n        try {\n            const result = await this.#processCommand(command);\n            const response = {\n                id: command.id,\n                ...result,\n            };\n            this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(response, command.channel ?? null));\n        }\n        catch (e) {\n            if (e instanceof protocol_js_1.Message.ErrorResponse) {\n                const errorResponse = e;\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(errorResponse.toErrorResponse(command.id), command.channel ?? null));\n            }\n            else {\n                const error = e;\n                this.#logger?.(log_js_1.LogType.bidi, error);\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(new protocol_js_1.Message.UnknownErrorException(error.message).toErrorResponse(command.id), command.channel ?? null));\n            }\n        }\n    }\n}\nexports.CommandProcessor = CommandProcessor;\n//# sourceMappingURL=CommandProcessor.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/** Container class for browsing contexts. */\nclass BrowsingContextStorage {\n    /** Map from context ID to context implementation. */\n    #contexts = new Map();\n    /** Gets all top-level contexts, i.e. those with no parent. */\n    getTopLevelContexts() {\n        return this.getAllContexts().filter((context) => context.isTopLevelContext());\n    }\n    /** Gets all contexts. */\n    getAllContexts() {\n        return Array.from(this.#contexts.values());\n    }\n    /** Deletes the context with the given ID. */\n    deleteContextById(id) {\n        this.#contexts.delete(id);\n    }\n    /** Deletes the given context. */\n    deleteContext(context) {\n        this.#contexts.delete(context.id);\n    }\n    /** Tracks the given context. */\n    addContext(context) {\n        this.#contexts.set(context.id, context);\n    }\n    /** Returns true whether there is an existing context with the given ID. */\n    hasContext(id) {\n        return this.#contexts.has(id);\n    }\n    /** Gets the context with the given ID, if any. */\n    findContext(id) {\n        return this.#contexts.get(id);\n    }\n    /** Returns the top-level context ID of the given context, if any. */\n    findTopLevelContextId(id) {\n        if (id === null) {\n            return null;\n        }\n        const maybeContext = this.findContext(id);\n        const parentId = maybeContext?.parentId ?? null;\n        if (parentId === null) {\n            return id;\n        }\n        return this.findTopLevelContextId(parentId);\n    }\n    /** Returns the top-level context of the given context, if any. */\n    findTopLevelContext(id) {\n        const topLevelContextId = this.findTopLevelContextId(id);\n        if (topLevelContextId === null) {\n            return null;\n        }\n        return this.findContext(topLevelContextId);\n    }\n    /** Gets the context with the given ID, if any, otherwise throws. */\n    getContext(id) {\n        const result = this.findContext(id);\n        if (result === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Context ${id} not found`);\n        }\n        return result;\n    }\n}\nexports.BrowsingContextStorage = BrowsingContextStorage;\n//# sourceMappingURL=browsingContextStorage.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Buffer = void 0;\n/**\n * Implements a FIFO buffer with a fixed size.\n */\nclass Buffer {\n    #capacity;\n    #entries = [];\n    #onItemRemoved;\n    /**\n     * @param capacity\n     * @param onItemRemoved optional delegate called for each removed element.\n     */\n    constructor(capacity, onItemRemoved) {\n        this.#capacity = capacity;\n        this.#onItemRemoved = onItemRemoved;\n    }\n    get() {\n        return this.#entries;\n    }\n    add(value) {\n        this.#entries.push(value);\n        while (this.#entries.length > this.#capacity) {\n            const item = this.#entries.shift();\n            if (item !== undefined) {\n                this.#onItemRemoved?.(item);\n            }\n        }\n    }\n}\nexports.Buffer = Buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdWrapper = void 0;\n/**\n * Creates an object with a positive unique incrementing id.\n */\nclass IdWrapper {\n    static #counter = 0;\n    #id;\n    constructor() {\n        this.#id = ++IdWrapper.#counter;\n    }\n    get id() {\n        return this.#id;\n    }\n}\nexports.IdWrapper = IdWrapper;\n//# sourceMappingURL=idWrapper.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionManager = exports.unrollEvents = exports.cartesianProduct = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/**\n * Returns the cartesian product of the given arrays.\n *\n * Example:\n *   cartesian([1, 2], ['a', 'b']); => [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n */\nfunction cartesianProduct(...a) {\n    return a.reduce((a, b) => a.flatMap((d) => b.map((e) => [d, e].flat())));\n}\nexports.cartesianProduct = cartesianProduct;\n/** Expands \"AllEvents\" events into atomic events. */\nfunction unrollEvents(events) {\n    const allEvents = [];\n    for (const event of events) {\n        switch (event) {\n            case protocol_js_1.BrowsingContext.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.BrowsingContext.EventNames));\n                break;\n            case protocol_js_1.CDP.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.CDP.EventNames));\n                break;\n            case protocol_js_1.Log.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Log.EventNames));\n                break;\n            case protocol_js_1.Network.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Network.EventNames));\n                break;\n            case protocol_js_1.Script.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Script.EventNames));\n                break;\n            default:\n                allEvents.push(event);\n        }\n    }\n    return allEvents;\n}\nexports.unrollEvents = unrollEvents;\nclass SubscriptionManager {\n    #subscriptionPriority = 0;\n    // BrowsingContext `null` means the event has subscription across all the\n    // browsing contexts.\n    // Channel `null` means no `channel` should be added.\n    #channelToContextToEventMap = new Map();\n    #browsingContextStorage;\n    constructor(browsingContextStorage) {\n        this.#browsingContextStorage = browsingContextStorage;\n    }\n    getChannelsSubscribedToEvent(eventMethod, contextId) {\n        const prioritiesAndChannels = Array.from(this.#channelToContextToEventMap.keys())\n            .map((channel) => ({\n            priority: this.#getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel),\n            channel,\n        }))\n            .filter(({ priority }) => priority !== null);\n        // Sort channels by priority.\n        return prioritiesAndChannels\n            .sort((a, b) => a.priority - b.priority)\n            .map(({ channel }) => channel);\n    }\n    #getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (contextToEventMap === undefined) {\n            return null;\n        }\n        const maybeTopLevelContextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n        // `null` covers global subscription.\n        const relevantContexts = [...new Set([null, maybeTopLevelContextId])];\n        // Get all the subscription priorities.\n        const priorities = relevantContexts\n            .map((c) => contextToEventMap.get(c)?.get(eventMethod))\n            .filter((p) => p !== undefined);\n        if (priorities.length === 0) {\n            // Not subscribed, return null.\n            return null;\n        }\n        // Return minimal priority.\n        return Math.min(...priorities);\n    }\n    subscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n        if (event === protocol_js_1.BrowsingContext.AllEvents) {\n            Object.values(protocol_js_1.BrowsingContext.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.CDP.AllEvents) {\n            Object.values(protocol_js_1.CDP.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Log.AllEvents) {\n            Object.values(protocol_js_1.Log.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Network.AllEvents) {\n            Object.values(protocol_js_1.Network.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Script.AllEvents) {\n            Object.values(protocol_js_1.Script.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            this.#channelToContextToEventMap.set(channel, new Map());\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            contextToEventMap.set(contextId, new Map());\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        // Do not re-subscribe to events to keep the priority.\n        if (eventMap.has(event)) {\n            return;\n        }\n        eventMap.set(event, this.#subscriptionPriority++);\n    }\n    /**\n     * Unsubscribes atomically from all events in the given contexts and channel.\n     */\n    unsubscribeAll(events, contextIds, channel) {\n        // Assert all contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                this.#browsingContextStorage.getContext(contextId);\n            }\n        }\n        const eventContextPairs = cartesianProduct(unrollEvents(events), contextIds);\n        // Assert all unsubscriptions are valid.\n        // If any of the unsubscriptions are invalid, do not unsubscribe from anything.\n        eventContextPairs\n            .map(([event, contextId]) => this.#checkUnsubscribe(event, contextId, channel))\n            .forEach((unsubscribe) => unsubscribe());\n    }\n    /**\n     * Unsubscribes from the event in the given context and channel.\n     * Syntactic sugar for \"unsubscribeAll\".\n     */\n    unsubscribe(eventName, contextId, channel) {\n        this.unsubscribeAll([eventName], [contextId], channel);\n    }\n    #checkUnsubscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        if (!eventMap.has(event)) {\n            throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n        }\n        return () => {\n            eventMap.delete(event);\n            // Clean up maps if empty.\n            if (eventMap.size === 0) {\n                contextToEventMap.delete(event);\n            }\n            if (contextToEventMap.size === 0) {\n                this.#channelToContextToEventMap.delete(channel);\n            }\n        };\n    }\n}\nexports.SubscriptionManager = SubscriptionManager;\n//# sourceMappingURL=SubscriptionManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst buffer_js_1 = require(\"../../../utils/buffer.js\");\nconst idWrapper_js_1 = require(\"../../../utils/idWrapper.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../../OutgoingBidiMessage.js\");\nconst DefaultMap_js_1 = require(\"../../../utils/DefaultMap.js\");\nconst SubscriptionManager_js_1 = require(\"./SubscriptionManager.js\");\nclass EventWrapper {\n    #idWrapper;\n    #contextId;\n    #event;\n    constructor(event, contextId) {\n        this.#idWrapper = new idWrapper_js_1.IdWrapper();\n        this.#contextId = contextId;\n        this.#event = event;\n    }\n    get id() {\n        return this.#idWrapper.id;\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get event() {\n        return this.#event;\n    }\n}\n/**\n * Maps event name to a desired buffer length.\n */\nconst eventBufferLength = new Map([\n    [protocol_js_1.Log.EventNames.LogEntryAddedEvent, 100],\n]);\nclass EventManager {\n    static #NETWORK_DOMAIN_PREFIX = 'network';\n    /**\n     * Maps event name to a set of contexts where this event already happened.\n     * Needed for getting buffered events from all the contexts in case of\n     * subscripting to all contexts.\n     */\n    #eventToContextsMap = new DefaultMap_js_1.DefaultMap(() => new Set());\n    /**\n     * Maps `eventName` + `browsingContext` to buffer. Used to get buffered events\n     * during subscription. Channel-agnostic.\n     */\n    #eventBuffers = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` + `channel` to last sent event id.\n     * Used to avoid sending duplicated events when user\n     * subscribes -> unsubscribes -> subscribes.\n     */\n    #lastMessageSent = new Map();\n    #subscriptionManager;\n    #bidiServer;\n    #isNetworkDomainEnabled;\n    constructor(bidiServer) {\n        this.#bidiServer = bidiServer;\n        this.#subscriptionManager = new SubscriptionManager_js_1.SubscriptionManager(bidiServer.getBrowsingContextStorage());\n        this.#isNetworkDomainEnabled = false;\n    }\n    get isNetworkDomainEnabled() {\n        return this.#isNetworkDomainEnabled;\n    }\n    /**\n     * Returns consistent key to be used to access value maps.\n     */\n    static #getMapKey(eventName, browsingContext, channel) {\n        return JSON.stringify({ eventName, browsingContext, channel });\n    }\n    registerEvent(event, contextId) {\n        this.registerPromiseEvent(Promise.resolve(event), contextId, event.method);\n    }\n    registerPromiseEvent(event, contextId, eventName) {\n        const eventWrapper = new EventWrapper(event, contextId);\n        const sortedChannels = this.#subscriptionManager.getChannelsSubscribedToEvent(eventName, contextId);\n        this.#bufferEvent(eventWrapper, eventName);\n        // Send events to channels in the subscription priority.\n        for (const channel of sortedChannels) {\n            this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(event, channel));\n            this.#markEventSent(eventWrapper, channel, eventName);\n        }\n    }\n    async subscribe(eventNames, contextIds, channel) {\n        // First check if all the contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                // Assert the context is known. Throw exception otherwise.\n                this.#bidiServer.getBrowsingContextStorage().getContext(contextId);\n            }\n        }\n        for (const eventName of eventNames) {\n            for (const contextId of contextIds) {\n                await this.#handleDomains(eventName, contextId);\n                this.#subscriptionManager.subscribe(eventName, contextId, channel);\n                for (const eventWrapper of this.#getBufferedEvents(eventName, contextId, channel)) {\n                    // The order of the events is important.\n                    this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(eventWrapper.event, channel));\n                    this.#markEventSent(eventWrapper, channel, eventName);\n                }\n            }\n        }\n    }\n    /**\n     * Enables domains for the subscribed event in the required contexts or\n     * globally.\n     */\n    async #handleDomains(eventName, contextId) {\n        // Enable network domain if user subscribed to any of network events.\n        if (eventName.startsWith(EventManager.#NETWORK_DOMAIN_PREFIX)) {\n            // Enable for all the contexts.\n            if (contextId === null) {\n                this.#isNetworkDomainEnabled = true;\n                await Promise.all(this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .getAllContexts()\n                    .map((context) => context.cdpTarget.enableNetworkDomain()));\n            }\n            else {\n                await this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .getContext(contextId)\n                    .cdpTarget.enableNetworkDomain();\n            }\n        }\n    }\n    unsubscribe(eventNames, contextIds, channel) {\n        this.#subscriptionManager.unsubscribeAll(eventNames, contextIds, channel);\n    }\n    /**\n     * If the event is buffer-able, put it in the buffer.\n     */\n    #bufferEvent(eventWrapper, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const bufferMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId);\n        if (!this.#eventBuffers.has(bufferMapKey)) {\n            this.#eventBuffers.set(bufferMapKey, new buffer_js_1.Buffer(eventBufferLength.get(eventName)));\n        }\n        this.#eventBuffers.get(bufferMapKey).add(eventWrapper);\n        // Add the context to the list of contexts having `eventName` events.\n        this.#eventToContextsMap.get(eventName).add(eventWrapper.contextId);\n    }\n    /**\n     * If the event is buffer-able, mark it as sent to the given contextId and channel.\n     */\n    #markEventSent(eventWrapper, channel, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const lastSentMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId, channel);\n        this.#lastMessageSent.set(lastSentMapKey, Math.max(this.#lastMessageSent.get(lastSentMapKey) ?? 0, eventWrapper.id));\n    }\n    /**\n     * Returns events which are buffered and not yet sent to the given channel events.\n     */\n    #getBufferedEvents(eventName, contextId, channel) {\n        const bufferMapKey = EventManager.#getMapKey(eventName, contextId);\n        const lastSentMapKey = EventManager.#getMapKey(eventName, contextId, channel);\n        const lastSentMessageId = this.#lastMessageSent.get(lastSentMapKey) ?? -Infinity;\n        const result = this.#eventBuffers\n            .get(bufferMapKey)\n            ?.get()\n            .filter((wrapper) => wrapper.id > lastSentMessageId) ?? [];\n        if (contextId === null) {\n            // For global subscriptions, events buffered in each context should be sent back.\n            Array.from(this.#eventToContextsMap.get(eventName).keys())\n                .filter((_contextId) => \n            // Events without context are already in the result.\n            _contextId !== null &&\n                // Events from deleted contexts should not be sent.\n                this.#bidiServer.getBrowsingContextStorage().hasContext(_contextId))\n                .map((_contextId) => this.#getBufferedEvents(eventName, _contextId, channel))\n                .forEach((events) => result.push(...events));\n        }\n        return result.sort((e1, e2) => e1.id - e2.id);\n    }\n}\nexports.EventManager = EventManager;\n//# sourceMappingURL=EventManager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RealmStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/** Container class for browsing realms. */\nclass RealmStorage {\n    /** Tracks handles and their realms sent to the client. */\n    #knownHandlesToRealm = new Map();\n    /** Map from realm ID to Realm. */\n    #realmMap = new Map();\n    get knownHandlesToRealm() {\n        return this.#knownHandlesToRealm;\n    }\n    get realmMap() {\n        return this.#realmMap;\n    }\n    /** Finds all realms that match the given filter. */\n    findRealms(filter) {\n        return Array.from(this.#realmMap.values()).filter((realm) => {\n            if (filter.realmId !== undefined && filter.realmId !== realm.realmId) {\n                return false;\n            }\n            if (filter.browsingContextId !== undefined &&\n                filter.browsingContextId !== realm.browsingContextId) {\n                return false;\n            }\n            if (filter.navigableId !== undefined &&\n                filter.navigableId !== realm.navigableId) {\n                return false;\n            }\n            if (filter.executionContextId !== undefined &&\n                filter.executionContextId !== realm.executionContextId) {\n                return false;\n            }\n            if (filter.origin !== undefined && filter.origin !== realm.origin) {\n                return false;\n            }\n            if (filter.type !== undefined && filter.type !== realm.type) {\n                return false;\n            }\n            if (filter.sandbox !== undefined && filter.sandbox !== realm.sandbox) {\n                return false;\n            }\n            if (filter.cdpSessionId !== undefined &&\n                filter.cdpSessionId !== realm.cdpSessionId) {\n                return false;\n            }\n            return true;\n        });\n    }\n    findRealm(filter) {\n        const maybeRealms = this.findRealms(filter);\n        if (maybeRealms.length !== 1) {\n            return undefined;\n        }\n        return maybeRealms[0];\n    }\n    /** Gets the only realm that matches the given filter, if any, otherwise throws. */\n    getRealm(filter) {\n        const maybeRealm = this.findRealm(filter);\n        if (maybeRealm === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Realm ${JSON.stringify(filter)} not found`);\n        }\n        return maybeRealm;\n    }\n    /** Deletes all realms that match the given filter. */\n    deleteRealms(filter) {\n        this.findRealms(filter).map((realm) => {\n            this.#realmMap.delete(realm.realmId);\n            Array.from(this.#knownHandlesToRealm.entries())\n                .filter(([, r]) => r === realm.realmId)\n                .map(([handle]) => this.#knownHandlesToRealm.delete(handle));\n        });\n    }\n}\nexports.RealmStorage = RealmStorage;\n//# sourceMappingURL=realmStorage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst processingQueue_js_1 = require(\"../utils/processingQueue.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst browsingContextStorage_js_1 = require(\"./domains/context/browsingContextStorage.js\");\nconst EventManager_js_1 = require(\"./domains/events/EventManager.js\");\nconst realmStorage_js_1 = require(\"./domains/script/realmStorage.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n    #messageQueue;\n    #transport;\n    #commandProcessor;\n    #browsingContextStorage;\n    #realmStorage;\n    #logger;\n    #handleIncomingMessage = (message) => {\n        void this.#commandProcessor.processCommand(message).catch((error) => {\n            this.#logger?.(log_js_1.LogType.system, error);\n        });\n    };\n    #processOutgoingMessage = async (messageEntry) => {\n        const message = messageEntry.message;\n        if (messageEntry.channel !== null) {\n            message['channel'] = messageEntry.channel;\n        }\n        await this.#transport.sendMessage(message);\n    };\n    constructor(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        super();\n        this.#logger = logger;\n        this.#browsingContextStorage = new browsingContextStorage_js_1.BrowsingContextStorage();\n        this.#realmStorage = new realmStorage_js_1.RealmStorage();\n        this.#messageQueue = new processingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage, this.#logger);\n        this.#transport = bidiTransport;\n        this.#transport.setOnMessage(this.#handleIncomingMessage);\n        this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(this.#realmStorage, cdpConnection, new EventManager_js_1.EventManager(this), selfTargetId, parser, this.#browsingContextStorage, this.#logger);\n        this.#commandProcessor.on('response', (response) => {\n            this.emitOutgoingMessage(response);\n        });\n    }\n    static async createAndStart(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        const server = new BidiServer(bidiTransport, cdpConnection, selfTargetId, parser, logger);\n        const cdpClient = cdpConnection.browserClient();\n        // Needed to get events about new targets.\n        await cdpClient.sendCommand('Target.setDiscoverTargets', { discover: true });\n        // Needed to automatically attach to new targets.\n        await cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await server.topLevelContextsLoaded();\n        return server;\n    }\n    async topLevelContextsLoaded() {\n        await Promise.all(this.#browsingContextStorage\n            .getTopLevelContexts()\n            .map((c) => c.awaitLoaded()));\n    }\n    /**\n     * Sends BiDi message.\n     */\n    emitOutgoingMessage(messageEntry) {\n        this.#messageQueue.add(messageEntry);\n    }\n    close() {\n        this.#transport.close();\n    }\n    getBrowsingContextStorage() {\n        return this.#browsingContextStorage;\n    }\n}\nexports.BidiServer = BidiServer;\n//# sourceMappingURL=BidiServer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpConnection = exports.CloseError = void 0;\nconst cdpClient_js_1 = require(\"./cdpClient.js\");\n/** A error that will be thrown if/when the connection is closed. */\nclass CloseError extends Error {\n}\nexports.CloseError = CloseError;\n/**\n * Represents a high-level CDP connection to the browser backend.\n * Manages a CdpClient instance for each active CDP session.\n */\nclass CdpConnection {\n    #transport;\n    #browserCdpClient;\n    /** Map from session ID to CdpClient. */\n    #sessionCdpClients = new Map();\n    #commandCallbacks = new Map();\n    #logger;\n    #nextId = 0;\n    constructor(transport, logger) {\n        this.#transport = transport;\n        this.#logger = logger;\n        this.#transport.setOnMessage(this.#onMessage);\n        this.#browserCdpClient = cdpClient_js_1.CdpClient.create(this, null);\n    }\n    /**\n     * Closes the connection to the browser.\n     */\n    close() {\n        this.#transport.close();\n        for (const [, { reject, error }] of this.#commandCallbacks) {\n            reject(error);\n        }\n        this.#commandCallbacks.clear();\n        this.#sessionCdpClients.clear();\n    }\n    /**\n     * @return The CdpClient object attached to the root browser session.\n     */\n    browserClient() {\n        return this.#browserCdpClient;\n    }\n    /**\n     * Gets a CdpClient instance by sessionId.\n     * @param sessionId The sessionId of the CdpClient to retrieve.\n     * @return The CdpClient object attached to the given session, or null if the session is not attached.\n     */\n    getCdpClient(sessionId) {\n        const cdpClient = this.#sessionCdpClients.get(sessionId);\n        if (!cdpClient) {\n            throw new Error('Unknown CDP session ID');\n        }\n        return cdpClient;\n    }\n    sendCommand(method, params, sessionId) {\n        return new Promise((resolve, reject) => {\n            const id = this.#nextId++;\n            this.#commandCallbacks.set(id, {\n                resolve,\n                reject,\n                error: new CloseError(`${method} ${JSON.stringify(params)} ${sessionId ?? ''} call rejected because the connection has been closed.`),\n            });\n            const messageObj = { id, method, params };\n            if (sessionId) {\n                messageObj.sessionId = sessionId;\n            }\n            const messageStr = JSON.stringify(messageObj);\n            const messagePretty = JSON.stringify(messageObj, null, 2);\n            void this.#transport.sendMessage(messageStr)?.catch((error) => {\n                this.#logger?.('error', error);\n                this.#transport.close();\n            });\n            this.#logger?.('sent ▸', messagePretty);\n        });\n    }\n    #onMessage = (message) => {\n        const parsed = JSON.parse(message);\n        const messagePretty = JSON.stringify(parsed, null, 2);\n        this.#logger?.('received ◂', messagePretty);\n        // Update client map if a session is attached or detached.\n        // Listen for these events on every session.\n        if (parsed.method === 'Target.attachedToTarget') {\n            const { sessionId } = parsed.params;\n            this.#sessionCdpClients.set(sessionId, cdpClient_js_1.CdpClient.create(this, sessionId));\n        }\n        else if (parsed.method === 'Target.detachedFromTarget') {\n            const { sessionId } = parsed.params;\n            const client = this.#sessionCdpClients.get(sessionId);\n            if (client) {\n                this.#sessionCdpClients.delete(sessionId);\n            }\n        }\n        if (parsed.id !== undefined) {\n            // Handle command response.\n            const callbacks = this.#commandCallbacks.get(parsed.id);\n            this.#commandCallbacks.delete(parsed.id);\n            if (callbacks) {\n                if (parsed.result) {\n                    callbacks.resolve(parsed.result);\n                }\n                else if (parsed.error) {\n                    callbacks.reject(parsed.error);\n                }\n            }\n        }\n        else if (parsed.method) {\n            const client = parsed.sessionId\n                ? this.#sessionCdpClients.get(parsed.sessionId)\n                : this.#browserCdpClient;\n            if (client) {\n                client.emit(parsed.method, parsed.params || {});\n            }\n        }\n    };\n}\nexports.CdpConnection = CdpConnection;\n//# sourceMappingURL=cdpConnection.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpClient = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst cdpConnection_js_1 = require(\"./cdpConnection.js\");\nclass CdpClient extends EventEmitter_js_1.EventEmitter {\n    #cdpConnection;\n    #sessionId;\n    constructor(cdpConnection, sessionId) {\n        super();\n        this.#cdpConnection = cdpConnection;\n        this.#sessionId = sessionId;\n    }\n    /**\n     * Creates a new CDP client object that communicates with the browser using a\n     * given transport mechanism.\n     * @param transport A transport object that will be used to send and receive raw CDP messages.\n     * @return A connected CDP client object.\n     */\n    static create(cdpConnection, sessionId) {\n        return new CdpClient(cdpConnection, sessionId);\n    }\n    /**\n     * Returns a command promise, which will be resolved with the command result\n     * after receiving the result from CDP.\n     * @param method Name of the CDP command to call.\n     * @param params Parameters to pass to the CDP command.\n     */\n    sendCommand(method, ...params) {\n        const param = params[0];\n        return this.#cdpConnection.sendCommand(method, param, this.#sessionId);\n    }\n    isCloseError(error) {\n        return error instanceof cdpConnection_js_1.CloseError;\n    }\n}\nexports.CdpClient = CdpClient;\n//# sourceMappingURL=cdpClient.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = void 0;\nclass WebSocketTransport {\n    #onMessage = null;\n    #websocket;\n    constructor(websocket) {\n        this.#websocket = websocket;\n        this.#websocket.on('message', (message) => {\n            this.#onMessage?.(message);\n        });\n    }\n    setOnMessage(onMessage) {\n        this.#onMessage = onMessage;\n    }\n    sendMessage(message) {\n        this.#websocket.send(message);\n    }\n    close() {\n        this.#onMessage = null;\n        this.#websocket.close();\n    }\n}\nexports.WebSocketTransport = WebSocketTransport;\n//# sourceMappingURL=websocketTransport.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = exports.CdpConnection = exports.CdpClient = void 0;\nvar cdpClient_js_1 = require(\"./cdpClient.js\");\nObject.defineProperty(exports, \"CdpClient\", { enumerable: true, get: function () { return cdpClient_js_1.CdpClient; } });\nvar cdpConnection_js_1 = require(\"./cdpConnection.js\");\nObject.defineProperty(exports, \"CdpConnection\", { enumerable: true, get: function () { return cdpConnection_js_1.CdpConnection; } });\nvar websocketTransport_js_1 = require(\"../utils/websocketTransport.js\");\nObject.defineProperty(exports, \"WebSocketTransport\", { enumerable: true, get: function () { return websocketTransport_js_1.WebSocketTransport; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.generatePage = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst log_js_1 = require(\"../utils/log.js\");\n/** HTML source code for the user-facing Mapper tab. */\nconst mapperPageSource = '<!DOCTYPE html><title>BiDi-CDP Mapper</title><style>body{font-family: Roboto, serif; font-size: 13px; color: #202124;}.log{padding: 12px; font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace; font-size: 11px; line-height: 180%; background: #f1f3f4; border-radius: 4px;}.pre{overflow-wrap: break-word; padding: 10px;}.card{margin: 60px auto; padding: 2px 0; max-width: 900px; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.15), 0 1px 6px rgba(0, 0, 0, 0.2); border-radius: 8px;}.divider{height: 1px; background: #f0f0f0;}.item{padding: 16px 20px;}</style><div class=\"card\"><div class=\"item\"><h1>BiDi-CDP Mapper is controlling this tab</h1><p>Closing or reloading it will stop the BiDi process. <a target=\"_blank\" title=\"BiDi-CDP Mapper GitHub Repository\" href=\"https://github.com/GoogleChromeLabs/chromium-bidi\">Details.</a></p></div><div class=\"divider\"></div><details id=\"details\"><summary class=\"item\">Debug information</summary></details></div>';\n/**\n * The following piece of HTML should be added to the `debug` element:\n *\n * <div class=\"divider\"></div>\n * <div class=\"item\">\n * <h3>${name}</h3>\n * <div id=\"${name}_log\" class=\"log\">\n */\nfunction findOrCreateTypeLogContainer(logType) {\n    const containerId = `${logType}_log`;\n    const existingContainer = document.getElementById(containerId);\n    if (existingContainer) {\n        return existingContainer;\n    }\n    const debugElement = document.getElementById('details');\n    const divider = document.createElement('div');\n    divider.className = 'divider';\n    debugElement.appendChild(divider);\n    const htmlItem = document.createElement('div');\n    htmlItem.className = 'item';\n    htmlItem.innerHTML = `<h3>${logType}</h3><div id=\"${containerId}\" class=\"log\"></div>`;\n    debugElement.appendChild(htmlItem);\n    return document.getElementById(containerId);\n}\nfunction generatePage() {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document.documentElement) {\n        return;\n    }\n    globalThis.document.documentElement.innerHTML = mapperPageSource;\n    // Create main log containers in proper order.\n    findOrCreateTypeLogContainer(log_js_1.LogType.system);\n    findOrCreateTypeLogContainer(log_js_1.LogType.bidi);\n    findOrCreateTypeLogContainer(log_js_1.LogType.browsingContexts);\n    findOrCreateTypeLogContainer(log_js_1.LogType.cdp);\n}\nexports.generatePage = generatePage;\nfunction log(logType, ...messages) {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document.documentElement) {\n        return;\n    }\n    // If `sendDebugMessage` is defined, send the log message there.\n    global.window?.sendDebugMessage?.(JSON.stringify({ logType, messages }));\n    const typeLogContainer = findOrCreateTypeLogContainer(logType);\n    // This piece of HTML should be added:\n    // <div class=\"pre\">...log message...</div>\n    const lineElement = document.createElement('div');\n    lineElement.className = 'pre';\n    lineElement.textContent = messages.join(' ');\n    typeLogContainer.appendChild(lineElement);\n}\nexports.log = log;\n//# sourceMappingURL=mapperTabPage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Parser = __importStar(require(\"../protocol-parser/protocol-parser.js\"));\nconst protocol_1 = require(\"../protocol/protocol\");\nconst BidiServer_js_1 = require(\"../bidiMapper/BidiServer.js\");\nconst index_js_1 = require(\"../cdp/index.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../bidiMapper/OutgoingBidiMessage.js\");\nconst mapperTabPage_js_1 = require(\"./mapperTabPage.js\");\n// Initiate `setSelfTargetId` as soon as possible to prevent race condition.\nconst waitSelfTargetIdPromise = waitSelfTargetId();\nvoid (async () => {\n    (0, mapperTabPage_js_1.generatePage)();\n    // Needed to filter out info related to BiDi target.\n    const selfTargetId = await waitSelfTargetIdPromise;\n    const bidiServer = await createBidiServer(selfTargetId);\n    (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Launched');\n    bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved({ launched: true }, null));\n})();\nfunction createCdpConnection() {\n    /**\n     * A CdpTransport implementation that uses the window.cdp bindings\n     * injected by Target.exposeDevToolsProtocol.\n     */\n    class WindowCdpTransport {\n        #onMessage = null;\n        constructor() {\n            window.cdp.onmessage = (message) => {\n                this.#onMessage?.call(null, message);\n            };\n        }\n        setOnMessage(onMessage) {\n            this.#onMessage = onMessage;\n        }\n        sendMessage(message) {\n            window.cdp.send(message);\n        }\n        close() {\n            this.#onMessage = null;\n            window.cdp.onmessage = null;\n        }\n    }\n    return new index_js_1.CdpConnection(new WindowCdpTransport(), (...messages) => {\n        (0, mapperTabPage_js_1.log)(log_js_1.LogType.cdp, ...messages);\n    });\n}\nfunction createBidiServer(selfTargetId) {\n    class WindowBidiTransport {\n        #onMessage = null;\n        constructor() {\n            window.onBidiMessage = (messageStr) => {\n                (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'received ◂', messageStr);\n                let messageObject;\n                try {\n                    messageObject = WindowBidiTransport.#parseBidiMessage(messageStr);\n                }\n                catch (e) {\n                    // Transport-level error does not provide channel.\n                    this.#respondWithError(messageStr, protocol_1.Message.ErrorCode.InvalidArgument, e.message, null);\n                    return;\n                }\n                this.#onMessage?.call(null, messageObject);\n            };\n        }\n        setOnMessage(onMessage) {\n            this.#onMessage = onMessage;\n        }\n        sendMessage(message) {\n            const messageStr = JSON.stringify(message);\n            window.sendBidiResponse(messageStr);\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'sent ▸', messageStr);\n        }\n        close() {\n            this.#onMessage = null;\n            window.onBidiMessage = null;\n        }\n        #respondWithError(plainCommandData, errorCode, errorMessage, channel) {\n            const errorResponse = WindowBidiTransport.#getErrorResponse(plainCommandData, errorCode, errorMessage);\n            if (channel) {\n                // XXX: get rid of any, same code existed in BidiServer.\n                this.sendMessage({\n                    ...errorResponse,\n                    channel,\n                });\n            }\n            else {\n                this.sendMessage(errorResponse);\n            }\n        }\n        static #getJsonType(value) {\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return 'array';\n            }\n            return typeof value;\n        }\n        static #getErrorResponse(messageStr, errorCode, errorMessage) {\n            // XXX: this is bizarre per spec. We reparse the payload and\n            // extract the ID, regardless of what kind of value it was.\n            let messageId;\n            try {\n                const messageObj = JSON.parse(messageStr);\n                if (WindowBidiTransport.#getJsonType(messageObj) === 'object' &&\n                    'id' in messageObj) {\n                    messageId = messageObj.id;\n                }\n            }\n            catch { }\n            return {\n                id: messageId,\n                error: errorCode,\n                message: errorMessage,\n                // XXX: optional stacktrace field.\n            };\n        }\n        static #parseBidiMessage(messageStr) {\n            let messageObject;\n            try {\n                messageObject = JSON.parse(messageStr);\n            }\n            catch {\n                throw new Error('Cannot parse data as JSON');\n            }\n            const parsedType = WindowBidiTransport.#getJsonType(messageObject);\n            if (parsedType !== 'object') {\n                throw new Error(`Expected JSON object but got ${parsedType}`);\n            }\n            // Extract and validate id, method and params.\n            const { id, method, params } = messageObject;\n            const idType = WindowBidiTransport.#getJsonType(id);\n            if (idType !== 'number' || !Number.isInteger(id) || id < 0) {\n                // TODO: should uint64_t be the upper limit?\n                // https://tools.ietf.org/html/rfc7049#section-2.1\n                throw new Error(`Expected unsigned integer but got ${idType}`);\n            }\n            const methodType = WindowBidiTransport.#getJsonType(method);\n            if (methodType !== 'string') {\n                throw new Error(`Expected string method but got ${methodType}`);\n            }\n            const paramsType = WindowBidiTransport.#getJsonType(params);\n            if (paramsType !== 'object') {\n                throw new Error(`Expected object params but got ${paramsType}`);\n            }\n            let channel = messageObject.channel;\n            if (channel !== undefined) {\n                const channelType = WindowBidiTransport.#getJsonType(channel);\n                if (channelType !== 'string') {\n                    throw new Error(`Expected string channel but got ${channelType}`);\n                }\n                // Empty string channel is considered as no channel provided.\n                if (channel === '') {\n                    channel = undefined;\n                }\n            }\n            return { id, method, params, channel };\n        }\n    }\n    return BidiServer_js_1.BidiServer.createAndStart(new WindowBidiTransport(), createCdpConnection(), selfTargetId, new BidiParserImpl(), mapperTabPage_js_1.log);\n}\nclass BidiParserImpl {\n    parseAddPreloadScriptParams(params) {\n        return Parser.Script.parseAddPreloadScriptParams(params);\n    }\n    parseRemovePreloadScriptParams(params) {\n        return Parser.Script.parseRemovePreloadScriptParams(params);\n    }\n    parseGetRealmsParams(params) {\n        return Parser.Script.parseGetRealmsParams(params);\n    }\n    parseCallFunctionParams(params) {\n        return Parser.Script.parseCallFunctionParams(params);\n    }\n    parseEvaluateParams(params) {\n        return Parser.Script.parseEvaluateParams(params);\n    }\n    parseDisownParams(params) {\n        return Parser.Script.parseDisownParams(params);\n    }\n    parseSendCommandParams(params) {\n        return Parser.CDP.parseSendCommandParams(params);\n    }\n    parseGetSessionParams(params) {\n        return Parser.CDP.parseGetSessionParams(params);\n    }\n    parseSubscribeParams(params) {\n        return Parser.Session.parseSubscribeParams(params);\n    }\n    parseNavigateParams(params) {\n        return Parser.BrowsingContext.parseNavigateParams(params);\n    }\n    parseReloadParams(params) {\n        return Parser.BrowsingContext.parseReloadParams(params);\n    }\n    parseGetTreeParams(params) {\n        return Parser.BrowsingContext.parseGetTreeParams(params);\n    }\n    parseCreateParams(params) {\n        return Parser.BrowsingContext.parseCreateParams(params);\n    }\n    parseCloseParams(params) {\n        return Parser.BrowsingContext.parseCloseParams(params);\n    }\n    parseCaptureScreenshotParams(params) {\n        return Parser.BrowsingContext.parseCaptureScreenshotParams(params);\n    }\n    parsePrintParams(params) {\n        return Parser.BrowsingContext.parsePrintParams(params);\n    }\n}\n// Needed to filter out info related to BiDi target.\nasync function waitSelfTargetId() {\n    return new Promise((resolve) => {\n        window.setSelfTargetId = (targetId) => {\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Current target ID:', targetId);\n            resolve(targetId);\n        };\n    });\n}\n//# sourceMappingURL=bidiTab.js.map"],"names":["util","Object","defineProperty","exports","value","getParsedType","ZodParsedType","objectUtil","assertEqual","val","assertIs","_arg","assertNever","_x","Error","arrayToEnum","items","obj","item","getValidEnumValues","validKeys","objectKeys","filter","k","filtered","objectValues","map","e","keys","object","key","prototype","hasOwnProperty","call","push","find","arr","checker","isInteger","Number","isFinite","Math","floor","joinValues","array","separator","join","jsonStringifyReplacer","_","toString","mergeShapes","first","second","data","undefined","string","isNaN","nan","number","boolean","function","bigint","symbol","Array","isArray","null","then","catch","promise","Map","Set","set","Date","date","unknown","ZodError_1","ZodError","quotelessJson","util_1","require$$0","ZodError$1","ZodIssueCode","JSON","stringify","replace","constructor","issues","super","this","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","name","errors","format","_mapper","mapper","issue","message","fieldErrors","_errors","processError","error","code","unionErrors","returnTypeError","argumentsError","path","length","curr","i","el","isEmpty","flatten","formErrors","create","en","require$$1","default","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","options","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","includes","position","startsWith","endsWith","too_small","type","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","__importDefault","mod","__esModule","getErrorMap","setErrorMap","en_1","defaultErrorMap","overrideErrorMap","isAsync","isValid","isDirty","isAborted","OK","DIRTY","INVALID","ParseStatus","addIssueToContext","EMPTY_PATH","makeIssue","errors_1","params","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","slice","reverse","ctx","common","contextualErrorMap","schemaErrorMap","x","dirty","abort","static","status","results","arrayValue","s","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","freeze","Promise","typeAliases","errorUtil","errToObj","discriminatedUnion","coerce","ZodFirstPartyTypeKind","late","ZodSchema","Schema","ZodBranded","BRAND","ZodNaN","ZodCatch","ZodDefault","ZodNullable","ZodTransformer","ZodEffects","ZodPromise","ZodNativeEnum","ZodEnum","ZodLiteral","ZodFunction","ZodSet","ZodMap","ZodRecord","ZodTuple","ZodIntersection","ZodUnion","ZodObject","ZodArray","ZodVoid","ZodNever","ZodUnknown","ZodNull","ZodUndefined","ZodSymbol","ZodDate","ZodBoolean","ZodBigInt","ZodString","ZodType","NEVER","void","union","transformer","strictObject","record","preprocess","pipeline","optional","onumber","oboolean","nullable","never","nativeEnum","literal","lazy","intersection","enum","effect","errorUtil_1","parseUtil_1","require$$2","require$$3","require$$4","ParseInputLazyPath","parent","_cachedPath","_path","_key","handleResult","result","success","_error","processCreateParams","errorMap","invalid_type_error","required_error","description","iss","def","spa","safeParseAsync","_def","parse","bind","safeParse","parseAsync","refine","refinement","superRefine","nullish","or","and","transform","brand","describe","pipe","isNullable","isOptional","_getType","input","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","resolve","_a","async","maybeAsyncResult","check","getIssueProperties","_refinement","setError","refinementData","schema","typeName","ZodOptional","option","incoming","defaultValueFunc","innerType","defaultValue","catchValueFunc","catchValue","This","target","ZodPipeline","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","emailRegex","emojiRegex","ipv4Regex","ipv6Regex","isValidIP","ip","version","test","arguments","_regex","regex","nonempty","min","trim","checks","kind","toLowerCase","toUpperCase","String","tooBig","tooSmall","URL","lastIndex","args","precision","offset","RegExp","_addCheck","email","url","emoji","uuid","cuid","cuid2","ulid","datetime","minLength","max","maxLength","len","isDatetime","ch","isEmail","isURL","isEmoji","isUUID","isCUID","isCUID2","isULID","isIP","floatSafeRemainder","step","valDecCount","split","stepDecCount","decCount","parseInt","toFixed","pow","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","minValue","maxValue","isInt","BigInt","Boolean","getTime","minDate","maxDate","ZodAny","_any","_unknown","exactLength","all","mergeArray","element","deepPartialify","newShape","shape","fieldSchema","unwrap","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strict","_b","_c","_d","strip","augmentation","merge","merging","setKey","index","pick","mask","forEach","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","types","getDiscriminator","ZodLazy","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","get","from","discriminatorValues","has","mergeValues","a","b","aType","bType","valid","bKeys","sharedKeys","indexOf","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","merged","left","right","rest","itemIndex","schemas","keySchema","keyType","valueSchema","valueType","mergeObjectAsync","third","entries","finalMap","minSize","size","maxSize","finalizeSet","elements","parsedSet","add","values","validate","implement","makeArgsIssue","makeReturnsIssue","returns","fn","parsedArgs","parsedReturns","parameters","returnType","func","strictImplement","getter","expectedValues","enumValues","Values","Enum","extract","exclude","opt","nativeEnumValues","promisified","sourceType","processed","checkCtx","arg","fatal","executeRefinement","acc","inner","base","createWithPreprocess","removeDefault","newCtx","removeCatch","Symbol","inResult","in","out","handleAsync","p","_fatal","p2","instanceof","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","any","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","tuple","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","__createBinding","o","k2","enumerable","__exportStar","require$$5","__setModuleDefault","v","__importStar","z","Script","BrowsingContext","EventNames","Log","Network","CDP","Message","ErrorCode","ErrorResponse","stacktrace","toErrorResponse","commandId","id","InvalidArgumentException","InvalidArgument","NoSuchHandleException","NoSuchHandle","InvalidSessionIdException","InvalidSessionId","NoSuchAlertException","NoSuchAlert","NoSuchFrameException","NoSuchFrame","NoSuchNodeException","NoSuchNode","NoSuchScriptException","NoSuchScript","SessionNotCreatedException","SessionNotCreated","UnknownCommandException","UnknownCommand","UnknownErrorException","UnknownError","UnsupportedOperationException","UnsupportedOperation","AllEvents","Session","parseObject","zod_1","protocol_js_1","MAX_INT","parseResult","CommonDataTypes","SharedReferenceSchema","sharedId","handle","RemoteReferenceSchema","UndefinedValueSchema","NullValueSchema","StringValueSchema","SpecialNumberSchema","NumberValueSchema","BooleanValueSchema","BigIntValueSchema","PrimitiveProtocolValueSchema","LocalValueSchema","ArrayLocalValueSchema","DateLocalValueSchema","MapLocalValueSchema","ObjectLocalValueSchema","RegExpLocalValueSchema","SetLocalValueSchema","LocalOrRemoteValueSchema","ListLocalValueSchema","MappingLocalValueSchema","pattern","flags","BrowsingContextSchema","MaxDepthSchema","RealmTypeSchema","GetRealmsParametersSchema","context","parseGetRealmsParams","ContextTargetSchema","sandbox","RealmTargetSchema","realm","TargetSchema","ResultOwnershipSchema","SerializationOptionsSchema","maxDomDepth","maxObjectDepth","includeShadowTree","EvaluateParametersSchema","expression","awaitPromise","resultOwnership","serializationOptions","parseEvaluateParams","DisownParametersSchema","handles","parseDisownParams","ChannelSchema","ChannelPropertiesSchema","channel","maxDepth","ownership","ChannelValueSchema","PreloadScriptSchema","AddPreloadScriptParametersSchema","functionDeclaration","parseAddPreloadScriptParams","RemovePreloadScriptParametersSchema","script","parseRemovePreloadScriptParams","ArgumentValueSchema","CallFunctionParametersSchema","parseCallFunctionParams","GetTreeParametersSchema","root","parseGetTreeParams","ReadinessStateSchema","NavigateParametersSchema","wait","parseNavigateParams","ReloadParametersSchema","ignoreCache","parseReloadParams","CreateParametersSchema","referenceContext","parseCreateParams","CloseParametersSchema","parseCloseParams","CaptureScreenshotParametersSchema","parseCaptureScreenshotParams","PrintPageParametersSchema","height","width","PrintMarginParametersSchema","bottom","top","PrintPageRangesSchema","pageRanges","every","pageRange","match","start","end","groups","PrintParametersSchema","background","margin","orientation","page","scale","shrinkToFit","parsePrintParams","SendCommandParamsSchema","cdpMethod","cdpParams","cdpSession","parseSendCommandParams","GetSessionParamsSchema","parseGetSessionParams","SubscriptionRequestParametersEventsSchema","SubscriptionRequestParametersSchema","events","contexts","parseSubscribeParams","EventEmitter_1","EventEmitter","mitt_1","n","on","t","off","splice","emit","EventEmitter$1","emitter","handler","once","event","onceHandler","eventData","LogType","processingQueue","ProcessingQueue","log_js_1","logger","processor","queue","isProcessing","entry","processIfNeeded","entryPromise","shift","system","unitConversions","inchesFromCm","cm","deferred","Deferred","isFinished","reject","onFulfilled","onRejected","reason","finally","onFinally","toStringTag","ScriptEvaluator","SHARED_ID_DIVIDER","eventManager","cdpObject","cdpClient","sendCommand","returnByValue","executionContextId","cdpRemoteObject","cdpRemoteObjectToCallArgument","cdpWebDriverValue","serialization","cdpToBidiValue","cdpEvaluateResult","contextId","exceptionDetails","serializeCdpExceptionDetails","realmId","_this","_arguments","callFunctionAndSerializeScript","thisAndArgumentsList","deserializeToCdpArg","cdpCallFunctionResult","objectId","unserializableValue","argumentValue","navigableId","rawBackendNodeId","backendNodeId","keyValueArray","flattenKeyValuePairs","argEvalResult","flattenValueList","channelHandle","queueNonEmptyResolver","onMessage","sendMessage","initChannelListener","mapping","keyArg","valueArg","list","channelId","getMessage","registerEvent","method","MessageEvent","source","browsingContextId","cdpExceptionDetails","lineOffset","callFrames","stackTrace","frame","functionName","lineNumber","columnNumber","exception","serializeCdpObject","text","stringifyObject","Realm","scriptEvaluator_js_1","realmStorage","browsingContextStorage","origin","scriptEvaluator","cdpSessionId","realmMap","knownHandlesToRealm","releaseObject","delete","cdpValue","deepSerializedValue","bidiValue","deepSerializedToBiDi","webDriverValue","hasOwn","internalId","weakLocalObjectReference","children","toBiDi","findContext","getContext","awaitUnblocked","callFunction","scriptEvaluate","browsingContextImpl","BrowsingContextImpl","unitConversions_js_1","deferred_js_1","realm_js_1","parentId","deferreds","documentInitialized","Page","navigatedWithinDocument","lifecycleEvent","DOMContentLoaded","load","loaderId","cdpTarget","maybeDefaultRealm","initListeners","addContext","isTopLevelContext","addChild","ContextCreatedEvent","serializeToBidiValue","deleteAllChildren","deleteRealms","ContextDestroyedEvent","deleteContextById","directChildren","allChildren","concat","child","childId","defaultRealm","updateCdpTarget","targetUnblocked","maybeSandboxes","findRealms","frameId","worldName","addParentField","c","targetInfo","targetId","urlFragment","timestamp","documentChanged","DomContentLoadedEvent","navigation","LoadEvent","auxData","uniqueId","getOrigin","isDefault","resetDeferredsIfFinished","browsingContexts","cdpNavigateResult","errorText","awaitLoaded","printToPdfCdpParams","printBackground","landscape","preferCSSPageSize","marginBottom","marginLeft","marginRight","marginTop","paperHeight","paperWidth","logHelper","getRemoteValuesText","logMessageFormatter","specifiers","isFormmatSpecifier","str","some","spec","output","argFormat","argValues","tokens","token","stringFromArg","parseFloat","toJson","formatText","logManager","LogManager","logHelper_js_1","getBidiStackTrace","cdpStackTrace","stackFrames","callFrame","initialize","initializeLogEntryAddedEventListener","findRealm","argsPromise","registerPromiseEvent","LogEntryAddedEvent","level","consoleApiType","round","textPromise","DefaultMap_1","DefaultMap","getDefaultValue","DefaultMap$1","networkRequest","NetworkRequest","requestId","requestWillBeSentEvent","requestWillBeSentExtraInfoEvent","responseReceivedEvent","responseReceivedExtraInfoEvent","beforeRequestSentDeferred","responseReceivedDeferred","onRequestWillBeSentEvent","sendBeforeRequestEvent","onRequestWillBeSentExtraInfoEvent","onResponseReceivedEvent","hasExtraInfo","sendResponseReceivedEvent","onResponseReceivedEventExtraInfo","onLoadingFailedEvent","loadingFailedEvent","getBaseEventParams","FetchErrorEvent","isIgnoredEvent","getBeforeRequestEvent","BeforeRequestSentEvent","initiator","getInitiatorType","redirectCount","request","getRequestData","wallTime","cookies","getCookies","associatedCookies","headers","headersSize","bodySize","timings","timeOrigin","requestTime","redirectStart","redirectEnd","fetchStart","dnsStart","dnsEnd","connectStart","connectEnd","tlsStart","tlsEnd","requestStart","responseStart","responseEnd","cdpSameSiteValue","cookieInfo","cookie","domain","expires","httpOnly","secure","sameSite","getCookiesSameSite","getResponseReceivedEvent","ResponseCompletedEvent","response","protocol","statusText","fromCache","fromDiskCache","fromPrefetchCache","getHeaders","mimeType","bytesReceived","encodedDataLength","headersText","content","networkProcessor","NetworkProcessor","DefaultMap_js_1","networkRequest_js_1","requestMap","getOrCreateNetworkRequest","CdpTarget","logManager_js_1","networkProcessor_js_1","parentTargetId","preloadScriptStorage","networkDomainActivated","setEventListeners","unblock","isNetworkDomainEnabled","enableNetworkDomain","enabled","autoAttach","waitForDebuggerOnStart","loadPreloadScripts","isCloseError","EventReceivedEvent","findPreloadScripts","contextIds","cdpPreloadScriptId","addPreloadScript","getAllContexts","getOrCreateSandbox","cdp","appendCdpPreloadScript","preloadScriptId","scriptSource","identifier","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","REGEX","_nodeId","_clockseq","byteToHex","substr","TypeError","_lastMSecs","_lastNSecs","v35","hashfunc","generateUUID","namespace","buf","unescape","encodeURIComponent","bytes","charCodeAt","stringToBytes","err","DNS","getOutputLength","inputLength8","safeAdd","y","lsw","md5cmn","q","num","cnt","md5ff","d","md5gg","md5hh","md5ii","v3","msg","length32","hexTab","hex","charAt","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","v3$1","f","ROTL","v5","K","H","l","N","ceil","M","_i","j","_i2","W","_t","_t2","T","v5$1","node","clockseq","seedBytes","random","msecs","now","nsecs","dt","tl","tmh","rnds","PreloadScriptStorage_1","PreloadScriptStorage","uuid_1","PreloadScriptStorage$1","scripts","addPreloadScripts","cdpPreloadScripts","preloadScript","v4","cdpPreloadScript","removeBiDiPreloadScripts","removeCdpPreloadScripts","sessionId","browsingContextProcessor","BrowsingContextProcessor","browsingContextImpl_js_1","cdpTarget_js_1","PreloadScriptStorage_js_1","cdpConnection","selfTargetId","browserClient","handleAttachedToTargetEvent","handleDetachedFromTargetEvent","handleFrameAttachedEvent","handleFrameDetachedEvent","parentBrowsingContext","parentFrameId","parentSessionCdpClient","targetCdpClient","getCdpClient","isValidTarget","maybeContext","getRealm","process_browsingContext_getTree","getTopLevelContexts","MAX_VALUE","browserCdpClient","newWindow","process_browsingContext_navigate","navigate","process_browsingContext_reload","reload","captureScreenshot","print","cdpTargets","bidiId","removePreloadScript","process_script_getRealms","realms","h","disown","commandParams","detachedFromTargetPromise","onContextDestroyed","eventParams","client","process_cdp_getSession","OutgoingBidiMessage_1","OutgoingBidiMessage","messagePromise","OutgoingBidiMessage$1","CommandProcessor_1","CommandProcessor","EventEmitter_js_1","browsingContextProcessor_js_1","OutgoingBidiMessage_js_1","BidiNoOpParser","contextProcessor","parser","ready","subscribe","unsubscribe","commandData","process_session_status","process_session_subscribe","process_session_unsubscribe","process_browsingContext_create","process_browsingContext_close","process_browsingContext_captureScreenshot","process_browsingContext_print","process_script_addPreloadScript","process_script_removePreloadScript","process_script_callFunction","process_script_evaluate","process_script_disown","process_cdp_sendCommand","command","processCommand","createResolved","errorResponse","bidi","CommandProcessor$1","BrowsingContextStorage","deleteContext","hasContext","findTopLevelContextId","findTopLevelContext","topLevelContextId","buffer","Buffer","capacity","onItemRemoved","idWrapper","IdWrapper","counter","SubscriptionManager_1","SubscriptionManager","unrollEvents","cartesianProduct","reduce","flatMap","flat","allEvents","SubscriptionManager$1","subscriptionPriority","channelToContextToEventMap","getChannelsSubscribedToEvent","eventMethod","priority","getEventSubscriptionPriorityForChannel","sort","contextToEventMap","maybeTopLevelContextId","priorities","specificEvent","eventMap","unsubscribeAll","checkUnsubscribe","eventName","EventManager_1","EventManager","buffer_js_1","idWrapper_js_1","SubscriptionManager_js_1","EventWrapper","eventBufferLength","eventToContextsMap","eventBuffers","lastMessageSent","subscriptionManager","bidiServer","getBrowsingContextStorage","browsingContext","eventWrapper","sortedChannels","bufferEvent","emitOutgoingMessage","createFromPromise","markEventSent","eventNames","handleDomains","getBufferedEvents","NETWORK_DOMAIN_PREFIX","bufferMapKey","getMapKey","lastSentMapKey","lastSentMessageId","Infinity","wrapper","_contextId","e1","e2","EventManager$1","RealmStorage","maybeRealms","maybeRealm","r","BidiServer_1","BidiServer","processingQueue_js_1","CommandProcessor_js_1","browsingContextStorage_js_1","EventManager_js_1","realmStorage_js_1","require$$6","messageQueue","transport","commandProcessor","handleIncomingMessage","processOutgoingMessage","messageEntry","bidiTransport","setOnMessage","server","discover","topLevelContextsLoaded","close","BidiServer$1","CdpConnection","CloseError","cdpClient_js_1","sessionCdpClients","commandCallbacks","nextId","CdpClient","clear","messageObj","messageStr","messagePretty","parsed","callbacks","cdpConnection_js_1","param","websocketTransport","WebSocketTransport","websocket","send","websocketTransport_js_1","mapperTabPage","log","generatePage","findOrCreateTypeLogContainer","logType","containerId","existingContainer","document","getElementById","debugElement","divider","createElement","className","appendChild","htmlItem","innerHTML","globalThis","documentElement","messages","global","window","sendDebugMessage","typeLogContainer","lineElement","textContent","desc","getOwnPropertyDescriptor","writable","configurable","bidiTab","Parser","protocol_1","BidiServer_js_1","index_js_1","mapperTabPage_js_1","waitSelfTargetIdPromise","setSelfTargetId","waitSelfTargetId","WindowBidiTransport","onBidiMessage","messageObject","parseBidiMessage","respondWithError","sendBidiResponse","plainCommandData","errorCode","getErrorResponse","messageId","getJsonType","idType","methodType","paramsType","channelType","createAndStart","WindowCdpTransport","onmessage","createCdpConnection","BidiParserImpl","createBidiServer","launched"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40]}